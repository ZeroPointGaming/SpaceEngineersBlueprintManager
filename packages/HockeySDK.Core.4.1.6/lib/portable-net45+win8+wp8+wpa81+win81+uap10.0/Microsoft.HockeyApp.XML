<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.HockeyApp.Core45</name>
    </assembly>
    <members>
        <member name="T:Microsoft.HockeyApp.Extensibility.ComponentContextInitializer">
            <summary>
            A telemetry context initializer that will gather component context information.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.ComponentContextInitializer.Initialize(Microsoft.HockeyApp.DataContracts.TelemetryContext)">
            <summary>
            Initializes the given <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext" />.
            </summary>
            <param name="context">The telemetry context to initialize.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryConfigurationFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryConfigurationFactory"/> class.
            </summary>
            <remarks>
            This constructor is protected because <see cref="T:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryConfigurationFactory"/> is only meant to be instantiated 
            by the <see cref="P:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryConfigurationFactory.Instance"/> property or by tests.
            </remarks>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryConfigurationFactory.Instance">
            <summary>
            Gets or sets the default <see cref="T:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryConfigurationFactory"/> instance used by <see cref="T:Microsoft.HockeyApp.TelemetryConfiguration"/>.
            </summary>
            <remarks>
            This property is a test isolation "pinch point" that allows us to test <see cref="T:Microsoft.HockeyApp.TelemetryConfiguration"/> without using reflection.
            </remarks>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.External.ComponentContextData">
            <summary>
            Encapsulates information describing an Application Insights component.
            </summary>
            <remarks>
            This class matches the "Application" schema concept. We are intentionally calling it "Component" for consistency 
            with terminology used by our portal and services and to encourage standardization of terminology within our 
            organization. Once a consensus is reached, we will change type and property names to match.
            </remarks>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.ComponentContextData.Version">
            <summary>
            Gets or sets the application version.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.ComponentContextData.Build">
            <summary>
            Gets or sets the application version.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.External.ContextTagKeys">
            <summary>
            Holds the static singleton instance of ContextTagKeys.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData">
            <summary>
            Encapsulates information about a device where an application is running.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData.Type">
            <summary>
            Gets or sets the type for the current device.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData.Id">
            <summary>
            Gets or sets a device unique ID.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData.OperatingSystem">
            <summary>
            Gets or sets the operating system name.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData.OemName">
            <summary>
            Gets or sets the device OEM for the current device.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData.Model">
            <summary>
            Gets or sets the device model for the current device.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData.NetworkType">
            <summary>
            Gets or sets the <a href="http://www.iana.org/assignments/ianaiftype-mib/ianaiftype-mib">IANA interface type</a> 
            for the internet connected network adapter.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData.ScreenResolution">
            <summary>
            Gets or sets the current application screen resolution.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData.Language">
            <summary>
            Gets or sets the current display language of the operating system.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData.RoleName">
            <summary>
            Gets or sets the role name.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData.RoleInstance">
            <summary>
            Gets or sets the role instance.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData.Ip">
            <summary>
            Gets or sets the device IP address.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.DeviceContextData.MachineName">
            <summary>
            Gets or sets the device VM name.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.External.InternalContextData">
            <summary>
            Internal context type shared between SDK and DP.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.External.LocationContextData">
            <summary>
            Encapsulates telemetry location information.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.LocationContextData.Ip">
            <summary>
            Gets or sets the location IP.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.External.OperationContextData">
            <summary>
            Encapsulates information about a user session.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.OperationContextData.Id">
            <summary>
            Gets or sets the application-defined operation ID.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.OperationContextData.Name">
            <summary>
            Gets or sets the application-defined operation NAME.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.External.SessionContextData">
            <summary>
            Encapsulates information about a user session.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.SessionContextData.Id">
            <summary>
            Gets or sets the application-defined session ID.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.SessionContextData.IsFirst">
            <summary>
            Gets or sets the IsFirst Session for the user.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.SessionContextData.IsNewSession">
            <summary>
            Gets or sets the IsNewSession Session.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.External.Tags">
            <summary>
            Base class for tags backed context.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.External.UserContextData">
            <summary>
            Encapsulates information about a user using an application.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.UserContextData.Id">
            <summary>
            Gets or sets the ID of user accessing the application.
            </summary>
            <remarks>
            Unique user ID is automatically generated in default Application Insights configuration. 
            </remarks>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.UserContextData.AccountId">
            <summary>
            Gets or sets the ID of an application-defined account associated with the user.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.UserContextData.UserAgent">
            <summary>
            Gets or sets the UserAgent of an application-defined account associated with the user.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.UserContextData.StoreRegion">
            <summary>
            Gets or sets the StoreRegion of an application-defined account associated with the user.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.External.UserContextData.AcquisitionDate">
            <summary>
            Gets or sets the date when the user accessed the application for the first time.
            </summary>
            <remarks>
            Acquisition date is automatically supplied in default Application Insights configuration.
            </remarks>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.External.UserContextData.SetDefaults(Microsoft.HockeyApp.Extensibility.Implementation.External.UserContextData)">
            <summary>
            Sets values on the current context based on the default context passed in.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.External.ExceptionDetails">
            <summary>
            Additional implementation for ExceptionDetails.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.External.ExceptionDetails.CreateWithoutStackInfo(System.Exception,Microsoft.HockeyApp.Extensibility.Implementation.External.ExceptionDetails)">
            <summary>
            Creates a new instance of ExceptionDetails from a System.Exception and a parent ExceptionDetails.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2">
            <summary>
            A simple adapter list that can convert between two data types on the fly.
            </summary>
            <typeparam name="TPublic">The type of the public collection.</typeparam>
            <typeparam name="TPrivate">The type of the private collection.</typeparam>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.publicCollection">
            <summary>
            The public collection.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.privateCollection">
            <summary>
            The private collection.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.convertPublicToPrivate">
            <summary>
            The convert public to private object delegate.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.convertPrivateToPublic">
            <summary>
            The convert private to public object delegate.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.#ctor(System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Func{`0,`1},System.Func{`1,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2"/> class.
            </summary>
            <param name="publicCollection">The public collection.</param>
            <param name="privateCollection">The private collection.</param>
            <param name="convertPublicToPrivate">The convert public to private object delegate.</param>
            <param name="convertPrivateToPublic">The convert private to public object delegate.</param>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.PublicCollection">
            <summary>
            Gets the public collection.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.PrivateCollection">
            <summary>
            Gets the private collection.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.SyncPublicToPrivate">
            <summary>
            Synchronizes the public collection to the private collection.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.SyncPrivateToPublic">
            <summary>
            Synchronizes the private collection to the public collection.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            True if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            True if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.AdapterList`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.ComponentContext">
            <summary>
            Encapsulates information describing an Application Insights component.
            </summary>
            <remarks>
            This class matches the "Application" schema concept. We are intentionally calling it "Component" for consistency 
            with terminology used by our portal and services and to encourage standardization of terminology within our 
            organization. Once a consensus is reached, we will change type and property names to match.
            </remarks>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.ComponentContext.Version">
            <summary>
            Gets or sets the application version.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.ComponentContext.ApplicationId">
            <summary>
             Gets or sets bundle/package identifier in reverse domain name notation.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.DeviceContext">
            <summary>
            Encapsulates information about a device where an application is running.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.DeviceContext.Type">
            <summary>
            Gets or sets the type for the current device.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.DeviceContext.Id">
            <summary>
            Gets or sets a device unique ID.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.DeviceContext.DeviceOS">
            <summary>
            Gets or sets the operating system name.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.DeviceContext.DeviceOSVersion">
            <summary>
            Gets or sets the operating system version.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.DeviceContext.OemName">
            <summary>
            Gets or sets the device OEM for the current device.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.DeviceContext.Model">
            <summary>
            Gets or sets the device model for the current device.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.DeviceContext.NetworkType">
            <summary>
            Gets or sets the <a href="http://www.iana.org/assignments/ianaiftype-mib/ianaiftype-mib">IANA interface type</a> 
            for the internet connected network adapter.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.DeviceContext.ScreenResolution">
            <summary>
            Gets or sets the current application screen resolution.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.DeviceContext.Language">
            <summary>
            Gets or sets the current display language of the operating system.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.DeviceContext.RoleName">
            <summary>
            Gets or sets the role name.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.DeviceContext.RoleInstance">
            <summary>
            Gets or sets the role instance.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.ExceptionConverter.ConvertToExceptionDetails(System.Exception,Microsoft.HockeyApp.Extensibility.Implementation.External.ExceptionDetails)">
            <summary>
            Converts a System.Exception to a ExceptionDetails.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.ExceptionConverter.SanitizeStackFrame``2(System.Collections.Generic.IList{``0},System.Func{``0,System.Int32,``1},System.Func{``1,System.Int32})">
            <summary>
            Sanitizing stack to 32k while selecting the initial and end stack trace.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.Clock">
            <summary>
            A highly-accurate, precise and testable clock.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.FixedSizeQueue`1">
            <summary>
            A light fixed size queue. If Enqueue is called and queue's limit has reached the last item will be removed.
            This data structure is thread safe.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.InternalContext">
            <summary>
            Encapsulates Internal information.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.InternalContext.SdkVersion">
            <summary>
            Gets or sets application insights SDK version.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.InternalContext.AgentVersion">
            <summary>
            Gets or sets application insights agent version.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.IRandomNumberBatchGenerator">
            <summary>
            Interface for random number generator capable of producing 
            a batch of unsigned 64 bit random numbers.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer">
            <summary>
            Serializes and compress the telemetry items into a JSON string. Compression will be done using GZIP, for Windows Phone 8 compression will be disabled because there
            is API support for it. 
            </summary>    
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer.CompressionType">
            <summary>
            Gets the compression type used by the serializer. 
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer.Serialize(System.Collections.Generic.IEnumerable{Microsoft.HockeyApp.Channel.ITelemetry},System.Boolean)">
            <summary>
            Serializes and compress the telemetry items into a JSON string. Each JSON object is separated by a new line. 
            </summary>
            <param name="telemetryItems">The list of telemetry items to serialize.</param>
            <param name="compress">Should serialization also perform compression.</param>
            <returns>The compressed and serialized telemetry items.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer.Serialize(Microsoft.HockeyApp.Channel.ITelemetry,System.Boolean)">
            <summary>
             Serialize and compress a telemetry item. 
            </summary>
            <param name="telemetryItem">A telemetry item.</param>
            <param name="compress">Should serialization also perform compression.</param>
            <returns>The compressed and serialized telemetry item.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer.SerializeAsString(System.Collections.Generic.IEnumerable{Microsoft.HockeyApp.Channel.ITelemetry})">
            <summary>
            Serializes <paramref name="telemetryItems"/> into a JSON string. Each JSON object is separated by a new line. 
            </summary>
            <param name="telemetryItems">The list of telemetry items to serialize.</param>
            <returns>A JSON string of all the serialized items.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer.SerializeAsString(Microsoft.HockeyApp.Channel.ITelemetry)">
            <summary>
            Serializes a <paramref name="telemetry"/> into a JSON string. 
            </summary>
            <param name="telemetry">The telemetry to serialize.</param>
            <returns>A JSON string of the serialized telemetry.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer.CreateCompressedStream(System.IO.Stream)">
            <summary>
            Creates compressed if possible, otherwise returns original stream.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer.SeializeToStream(System.Collections.Generic.IEnumerable{Microsoft.HockeyApp.Channel.ITelemetry},System.IO.TextWriter)">
            <summary>
            Serializes <paramref name="telemetryItems"/> and write the response to <paramref name="streamWriter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer.SerializePerformanceCounter(Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry,Microsoft.HockeyApp.Extensibility.Implementation.JsonWriter)">
            <summary>
            Serializes this object in JSON format.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer.SerializeCrash(Microsoft.HockeyApp.DataContracts.CrashTelemetry,Microsoft.HockeyApp.Extensibility.Implementation.JsonWriter)">
            <summary>
            Serializes the crash.
            </summary>
            <param name="telemetry">The telemetry.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer.SerializeCrashThreads(System.Collections.Generic.IList{Microsoft.HockeyApp.DataContracts.CrashTelemetryThread},Microsoft.HockeyApp.Extensibility.Implementation.JsonWriter)">
            <summary>
            Serializes the crash threads.
            </summary>
            <param name="threads">The threads.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer.SerializeCrashThreadFrames(System.Collections.Generic.IList{Microsoft.HockeyApp.DataContracts.CrashTelemetryThreadFrame},Microsoft.HockeyApp.Extensibility.Implementation.JsonWriter)">
            <summary>
            Serializes the crash thread frames.
            </summary>
            <param name="frames">The frames.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonSerializer.SerializeCrashBinaries(System.Collections.Generic.IList{Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary},Microsoft.HockeyApp.Extensibility.Implementation.JsonWriter)">
            <summary>
            Serializes the crash binaries.
            </summary>
            <param name="binaries">The binaries.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonWriter.WritePropertyName(System.String)">
            <summary>
            Writes the specified property name enclosed in double quotation marks followed by a colon.
            </summary>
            <remarks>
            When this method is called multiple times, the second call after <see cref="M:Microsoft.HockeyApp.Extensibility.Implementation.JsonWriter.WriteStartObject"/>
            and all subsequent calls will write a coma before the name.
            </remarks>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.LocationContext">
            <summary>
            Encapsulates telemetry location information.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.LocationContext.Ip">
            <summary>
            Gets or sets the location IP.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.OperationContext">
            <summary>
            Encapsulates information about an operation. Operation normally reflects an end to end scenario that starts from a user action (e.g. button click).  
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.OperationContext.Id">
            <summary>
            Gets or sets the application-defined operation ID.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.OperationContext.Name">
            <summary>
            Gets or sets the application-defined operation NAME.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.OperationContext.SyntheticSource">
            <summary>
            Gets or sets the application-defined operation SyntheticSource.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.Platform.PlatformSingleton">
            <summary>
            Provides access to the <see cref="P:Microsoft.HockeyApp.Extensibility.Implementation.Platform.PlatformSingleton.Current"/> platform.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.Platform.PlatformSingleton.Current">
            <summary>
            Gets or sets the current <see cref="T:Microsoft.HockeyApp.Services.IPlatformService"/> implementation.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.Property">
            <summary>
            A helper class for implementing properties of telemetry and context classes.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.Property.SanitizeCollection``1(System.Collections.Generic.IList{``0},System.Action{``0})">
            <summary>
            Sanitizes the collection and each individual item in the collection.
            </summary>
            <typeparam name="TType">The type of the items in the collection.</typeparam>
            <param name="collection">The collection to sanitize.</param>
            <param name="sanitize">The sanitize callback (used to avoid defining a new interface).</param>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.SessionContext">
            <summary>
            Encapsulates information about a user session.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.SessionContext.Id">
            <summary>
            Gets or sets the application-defined session ID.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.SessionContext.IsFirst">
            <summary>
            Gets or sets the IsFirst Session for the user.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.TaskTimer">
            <summary>
            Runs a task after a certain delay and log any error.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.TaskTimer.InfiniteTimeSpan">
            <summary>
            Represents an infinite time span.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.TaskTimer.Delay">
            <summary>
            Gets or sets the delay before the task starts. 
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.TaskTimer.IsStarted">
            <summary>
            Gets a value indicating whether value that indicates if a task has already started.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.TaskTimer.Start(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Start the task.
            </summary>
            <param name="elapsed">The task to run.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.TaskTimer.Cancel">
            <summary>
            Cancels the current task.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.TaskTimer.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.Telemetry.NormalizeInstrumentationKey(System.String)">
            <summary>
            Normalize instrumentation key by removing dashes ('-') and making string in the lowercase.
            In case no InstrumentationKey is available just return empty string.
            In case when InstrumentationKey is available return normalized key + dot ('.')
            as a separator between instrumentation key part and telemetry name part.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryContextExtensions">
            <summary>
            Extension methods for TelemetryContext.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryContextExtensions.GetInternalContext(Microsoft.HockeyApp.DataContracts.TelemetryContext)">
            <summary>
            Returns TelemetryContext's Internal context.
            </summary>
            <param name="context">Telemetry context to get Internal context for.</param>
            <returns>Internal context for TelemetryContext.</returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.Tracing.CoreEventSource.Nested">
            <summary>
            We are using Singleton with nested class in order to have lazy singleton initialization to prevent memory issue described in a bug #566011.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.Tracing.CoreEventSource.Nested.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Microsoft.HockeyApp.Extensibility.Implementation.Tracing.CoreEventSource.Nested" /> class. 
            Explicit static constructor to tell C# compiler not to mark type.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.TypeExtensions">
            <summary>
            Defines extension methods that allow coding against <see cref="T:System.Type"/> without conditional compilation on versions of .NET framework.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.TypeExtensions.GetProperties(System.Type)">
            <summary>
            Returns all the public properties of the specified type.
            </summary>
            <remarks>
            This method emulates the built-in method of the <see cref="T:System.Type"/> class which is not available on Windows Runtime.
            Note that, unlike the built-in <see cref="T:System.Type"/> method, this method does not return properties defined in any of the base types.
            However, this should be sufficient for our public types, which have to be sealed on Windows Runtime.
            </remarks>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.UserContext">
            <summary>
            Encapsulates information about a user using an application.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.UserContext.Id">
            <summary>
            Gets or sets the ID of user accessing the application.
            </summary>
            <remarks>
            Unique user ID is automatically generated in default Application Insights configuration. 
            </remarks>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.UserContext.AccountId">
            <summary>
            Gets or sets the ID of an application-defined account associated with the user.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.UserContext.UserAgent">
            <summary>
            Gets or sets the UserAgent of an application-defined account associated with the user.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.UserContext.AcquisitionDate">
            <summary>
            Gets or sets the date when the user accessed the application for the first time.
            </summary>
            <remarks>
            Acquisition date is automatically supplied in default Application Insights configuration.
            </remarks>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.UserContext.StoreRegion">
            <summary>
            Gets or sets the store region of an application-defined account associated with the user.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom">
            <summary>
            Random generator creating “sufficiently random” integers, which is faster than to initializes a new instance of the GUID structure, and uses 8 bytes only for the id instead of 16.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.random">
            <summary>
            Generator singleton.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.index">
            <summary>
            Index of the last used random number within pre-generated array.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.segmentCount">
            <summary>
            Count of segments of random numbers.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.segmentSize">
            <summary>
            Number of random numbers per segment.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.bitsToStoreRandomIndexWithinSegment">
            <summary>
            Number of bits used to store index of the random number within segment.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.segmentIndexMask">
            <summary>
            Bit mask to get segment index bits.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.randomIndexWithinSegmentMask">
            <summary>
            Bit mask to get index of the random number within segment.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.randomArrayIndexMask">
            <summary>
            Bit mask to get index of the random number in the pre-generated array.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.randomGemerators">
            <summary>
            Array of random number batch generators (one per each segment).
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.randomNumbers">
            <summary>
            Array of pre-generated random numbers.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.Initialize">
            <summary>
            Initializes generator with a set of random numbers.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.Initialize(System.Func{System.UInt64,Microsoft.HockeyApp.Extensibility.Implementation.IRandomNumberBatchGenerator},System.Int32,System.Int32)">
            <summary>
            Initializes generator with a set of random numbers.
            </summary>
            <param name="randomGeneratorFactory">Factory used to create random number batch generators.</param>
            <param name="segmentIndexBits">Number of significant bits in segment index, i.e. value of 3 means 8 segments of random numbers - 0..7.</param>
            <param name="segmentBits">Number of significant bits in random number index within segment, i.e. value of 10 means 1024 random numbers per segment.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.Next">
            <summary>
            Weakly thread safe next (random) operation id generator
            where 'weakly' indicates that it is unlikely we'll get into 
            collision state.
            </summary>
            <returns>Next operation id.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.WeakConcurrentRandom.RegenerateSegment(System.Int32)">
            <summary>
            Generates random number batch for segment which just exhausted
            according to value of the new index.
            </summary>
            <param name="newIndex">Index in random number array of the random number we're about to return.</param>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.XorshiftRandomBatchGenerator">
            <summary>
            Generates batches of random number using Xorshift algorithm
            Note: the base code is from http://www.codeproject.com/Articles/9187/A-fast-equivalent-for-System-Random.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.XorshiftRandomBatchGenerator.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Extensibility.Implementation.XorshiftRandomBatchGenerator"/> class.
            </summary>
            <param name="seed">Random generator seed value.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.XorshiftRandomBatchGenerator.NextBatch(System.UInt64[],System.Int32,System.Int32)">
            <summary>
            Generates a batch of random numbers.
            </summary>
            <param name="buffer">Buffer to put numbers in.</param>
            <param name="index">Start index in the buffer.</param>
            <param name="count">Count of random numbers to generate.</param>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryModules">
            <summary>
            This API supports the AI Framework infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryModules.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryModules"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryModules.Instance">
            <summary>
            Gets the TelemetryModules collection.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Implementation.TelemetryModules.Modules">
            <summary>
            Gets the telemetry modules collection.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.DeviceContextInitializer">
            <summary>
            A telemetry context initializer that will gather device context information.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.DeviceContextInitializer.Initialize(Microsoft.HockeyApp.DataContracts.TelemetryContext)">
            <summary>
            Initializes the given <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext" />.
            </summary>
            <param name="context">The telemetry context to initialize.</param>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.IContextInitializer">
            <summary>
            Represents an object that implements supporting logic for <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/>.
            </summary>
            <remarks>
            One type of objects that support <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/> is a telemetry source.
            A telemetry source can supply initial property values for a <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/> object 
            during its construction or generate <see cref="T:Microsoft.HockeyApp.Channel.ITelemetry"/> objects during its lifetime.
            </remarks>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.IContextInitializer.Initialize(Microsoft.HockeyApp.DataContracts.TelemetryContext)">
            <summary>
            Initializes the given <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/>.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.IDebugOutput">
            <summary>
            Encapsulates method call that has to be compiled with DEBUG compiler constant.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.IDebugOutput.WriteLine(System.String)">
            <summary>
            Write the message to the VisualStudio output window.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.IDebugOutput.IsLogging">
            <summary>
            Checks to see if logging is enabled by an attached debugger. 
            </summary>
            <returns>true if a debugger is attached and logging is enabled; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.ITelemetryModule">
            <summary>
            Represents an object that supports initialization from <see cref="T:Microsoft.HockeyApp.TelemetryConfiguration"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.ITelemetryModule.Initialize">
            <summary>
            Initialize method is called after all configuration properties have been loaded from the configuration.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.ITelemetryInitializer">
            <summary>
            Represents an object that initializes <see cref="T:Microsoft.HockeyApp.Channel.ITelemetry"/> objects.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/> instances use <see cref="T:Microsoft.HockeyApp.Extensibility.ITelemetryInitializer"/> objects to 
            automatically initialize properties of the <see cref="T:Microsoft.HockeyApp.Channel.ITelemetry"/> objects.
            </remarks>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.ITelemetryInitializer.Initialize(Microsoft.HockeyApp.Channel.ITelemetry)">
            <summary>
            Initializes properties of the specified <see cref="T:Microsoft.HockeyApp.Channel.ITelemetry"/> object.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.SdkVersionPropertyContextInitializer">
            <summary>
            Initializes SDK Properties: SDK Version and SDKMode.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.SdkVersionPropertyContextInitializer.Initialize(Microsoft.HockeyApp.DataContracts.TelemetryContext)">
            <summary>
            Adds a telemetry property for the version of SDK.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.SequencePropertyInitializer">
            <summary>
            An <see cref="T:Microsoft.HockeyApp.Extensibility.ITelemetryInitializer"/> that that populates <see cref="P:Microsoft.HockeyApp.Channel.ITelemetry.Sequence"/> property for 
            the Microsoft internal telemetry sent to the Vortex endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.SequencePropertyInitializer.Initialize(Microsoft.HockeyApp.Channel.ITelemetry)">
            <summary>
            Populates <see cref="P:Microsoft.HockeyApp.Channel.ITelemetry.Sequence"/> with unique ID and sequential number.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.TimestampPropertyInitializer">
            <summary>
            An <see cref="T:Microsoft.HockeyApp.Extensibility.ITelemetryInitializer"/> that sets <see cref="P:Microsoft.HockeyApp.Channel.ITelemetry.Timestamp"/> to <see cref="P:System.DateTimeOffset.Now"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.TimestampPropertyInitializer.Initialize(Microsoft.HockeyApp.Channel.ITelemetry)">
            <summary>
            Sets <see cref="P:Microsoft.HockeyApp.Channel.ITelemetry.Timestamp"/> to <see cref="P:System.DateTimeOffset.Now"/>.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Windows.UserContextInitializer">
            <summary>
            Tracks anonymous user Id for Store Apps (Windows Store and Windows Phone).
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Windows.UserContextInitializer.Initialize(Microsoft.HockeyApp.Channel.ITelemetry)">
            <summary>
            Initializes user context.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensibility.Windows.SessionTelemetryModule">
            <summary>
            Tracks user sessions for Store Apps (Windows Store and Windows Phone).
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Windows.SessionTelemetryModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Extensibility.Windows.SessionTelemetryModule"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Extensibility.Windows.SessionTelemetryModule.Timeout">
            <summary>
            Gets or sets the value that determines if previous user session timed out.
            </summary>
            <remarks>
            Store apps can be suspended or even closed when user switches back and forth between apps. 
            If the amount of time between the moment an app is closed and then started again is less 
            than <see cref="P:Microsoft.HockeyApp.Extensibility.Windows.SessionTelemetryModule.Timeout"/> we assume that the previous session continues.
            </remarks>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Windows.SessionTelemetryModule.Microsoft#HockeyApp#Extensibility#ITelemetryInitializer#Initialize(Microsoft.HockeyApp.Channel.ITelemetry)">
            <summary>
            Initializes <see cref="P:Microsoft.HockeyApp.Extensibility.Implementation.SessionContext.Id"/> property of the <see cref="P:Microsoft.HockeyApp.DataContracts.TelemetryContext.Session"/> context.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensibility.Windows.SessionTelemetryModule.Initialize">
            <summary>
            Initializes this instance of <see cref="T:Microsoft.HockeyApp.Extensibility.Windows.SessionTelemetryModule"/> and begins session tracking.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.HttpService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Services.HttpService"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Services.IDeviceService">
            <summary>
            The device context reader interface used while reading device related information in a platform specific way.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IDeviceService.GetDeviceType">
            <summary>
            Gets the type of the device.
            </summary>
            <returns>The type for this device as a hard-coded string.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IDeviceService.GetDeviceUniqueId">
            <summary>
            Gets the device unique identifier.
            </summary>
            <returns>The discovered device identifier.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IDeviceService.GetOperatingSystemVersionAsync">
            <summary>
            Gets the operating system version.
            </summary>
            <returns>The discovered operating system.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IDeviceService.GetOemName">
            <summary>
            Gets the device OEM.
            </summary>
            <returns>The discovered OEM.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IDeviceService.GetDeviceModel">
            <summary>
            Gets the device model.
            </summary>
            <returns>The discovered device model.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IDeviceService.GetNetworkType">
            <summary>
            Gets the network type.
            </summary>
            <returns>The discovered network type.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IDeviceService.GetHostSystemLocale">
            <summary>
            Gets the host system locale.
            </summary>
            <returns>The discovered locale.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IDeviceService.GetOperatingSystemName">
            <summary>
            Gets operating system name.
            </summary>
            <returns>Operating system name.</returns>
        </member>
        <member name="E:Microsoft.HockeyApp.Services.IApplicationService.OnSuspending">
            <summary>
            Occurs when an app is suspending.
            </summary>
        </member>
        <member name="E:Microsoft.HockeyApp.Services.IApplicationService.OnResuming">
            <summary>
            Occurs when an app is resuming.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IApplicationService.Init">
            <summary>
            Initializes the service.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IApplicationService.IsDevelopmentMode">
            <summary>
            Indicates whether the application is installed in development mode.
            </summary>
            <returns>True if a package is installed in development mode, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IApplicationService.GetVersion">
            <summary>
            Gets the version for the current application. If the version cannot be found, we will return the passed in default.
            </summary>
            <returns>The extracted data.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IApplicationService.GetApplicationId">
            <summary>
            Gets the application id, which is then namespace name for App class.
            </summary>
            <returns>Namespace name for App class.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IApplicationService.GetStoreRegion">
            <summary>
            Gets the application store region.
            </summary>
            <returns>The two-letter identifier for the user's region.</returns>
        </member>
        <member name="F:Microsoft.HockeyApp.Services.BaseStorageService.peekedTransmissions">
            <summary>
            Peeked transmissions dictionary (maps file name to its full path). Holds all the transmissions that were peeked.
            </summary>
            <remarks>
            Note: The value (=file's full path) is not required in the Storage implementation. 
            If there was a concurrent Abstract Data Type Set it would have been used instead. 
            However, since there is no concurrent Set, dictionary is used and the second value is ignored.    
            </remarks>
        </member>
        <member name="P:Microsoft.HockeyApp.Services.BaseStorageService.CapacityInBytes">
            <summary>
            Gets or sets the maximum size of the storage in bytes. When limit is reached, the Enqueue method will drop new transmissions. 
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Services.BaseStorageService.MaxFiles">
            <summary>
            Gets or sets the maximum number of files. When limit is reached, the Enqueue method will drop new transmissions. 
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.BaseStorageService.Init(System.String)">
            <summary>
            Initializes the <see cref="T:Microsoft.HockeyApp.Services.BaseStorageService"/>
            </summary>
            <param name="uniqueFolderName">A folder name. Under this folder all the transmissions will be saved.</param>
        </member>
        <member name="T:Microsoft.HockeyApp.Services.IPlatformService">
            <summary>
            Encapsulates platform-specific functionality required by the API.
            </summary>
            <remarks>
            This type is public to enable mocking on Windows Phone.
            </remarks>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IPlatformService.GetLocalApplicationSettings">
            <summary>
            Use this locality for data you need to persist. The system will never destroy whatever data you put here unless the user uninstalls the package.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IPlatformService.GetRoamingApplicationSettings">
            <summary>
            Use this locality for data you want the system to automatically copy across the user's PCs. Windows Store apps are licensed to a user, and a user is allowed
            to install a single app on many PCs. This locality causes your package's data to be the same across all the user's PCs using an eventual consistency model.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IPlatformService.ReadConfigurationXml">
            <summary>
            Returns contents of the configuration file in the application directory.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IPlatformService.GetExceptionDetails(System.Exception,Microsoft.HockeyApp.Extensibility.Implementation.External.ExceptionDetails)">
            <summary>
            Returns the platform specific <see cref="T:Microsoft.HockeyApp.Extensibility.Implementation.External.ExceptionDetails"/> object for the given Exception.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IPlatformService.GetDebugOutput">
            <summary>
            Returns the platform specific Debugger writer to the VS output console.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Services.IPlatformService.SdkName">
            <summary>
            Name of SDK as it appears on http://nuget.org, for example 
            for https://www.nuget.org/packages/HockeySDK.UWP/ it is HockeySDK.UWP
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Channel.InMemoryChannel">
            <summary>
            Represents a communication channel for sending telemetry to Application Insights via HTTPS. There will be a buffer that will not be persisted, to enforce the 
            queued telemetry items to be sent, <see cref="M:Microsoft.HockeyApp.Channel.ITelemetryChannel.Flush"/> should be called.    
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.InMemoryChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Channel.InMemoryChannel" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.InMemoryChannel.#ctor(Microsoft.HockeyApp.Channel.TelemetryBuffer,Microsoft.HockeyApp.Channel.InMemoryTransmitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Channel.InMemoryChannel" /> class. Used in unit tests for constructor injection.  
            </summary>
            <param name="telemetryBuffer">The telemetry buffer that will be used to enqueue new events.</param>
            <param name="transmitter">The in memory transmitter that will send the events queued in the buffer.</param>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.InMemoryChannel.DeveloperMode">
            <summary>
            Gets or sets a value indicating whether developer mode of telemetry transmission is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.InMemoryChannel.SendingInterval">
            <summary>
            Gets or sets the sending interval. Once the interval expires, <see cref="T:Microsoft.HockeyApp.Channel.InMemoryChannel"/> 
            serializes the accumulated telemetry items for transmission and sends it over the wire.
            </summary>    
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.InMemoryChannel.EndpointAddress">
            <summary>
            Gets or sets the HTTP address where the telemetry is sent.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.InMemoryChannel.DataUploadIntervalInSeconds">
            <summary>
            Gets or sets the maximum telemetry batching interval. Once the interval expires, <see cref="T:Microsoft.HockeyApp.Channel.InMemoryChannel"/> 
            serializes the accumulated telemetry items for transmission.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.InMemoryChannel.MaxTelemetryBufferCapacity">
            <summary>
            Gets or sets the maximum number of telemetry items will accumulate in a memory before 
            the <see cref="T:Microsoft.HockeyApp.Channel.InMemoryChannel"/> serializing them for transmission to Application Insights.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.InMemoryChannel.Send(Microsoft.HockeyApp.Channel.ITelemetry)">
            <summary>
            Sends an instance of ITelemetry through the channel.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.InMemoryChannel.Flush">
            <summary>
            Will send all the telemetry items stored in the memory.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.InMemoryChannel.Dispose">
            <summary>
            Disposing the channel.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Channel.InMemoryTransmitter">
            <summary>
            A transmitter that will immediately send telemetry over HTTP. 
            Telemetry items are being sent when Flush is called, or when the buffer is full (An OnFull "event" is raised) or every 30 seconds. 
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.InMemoryTransmitter.sendingLockObj">
            <summary>
            A lock object to serialize the sending calls from Flush, OnFull event and the Runner.  
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.InMemoryTransmitter.disposeCount">
            <summary>
            The number of times this object was disposed.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.InMemoryTransmitter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.InMemoryTransmitter.Flush">
            <summary>
            Flushes the in-memory buffer and sends it.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.InMemoryTransmitter.Runner">
            <summary>
            Flushes the in-memory buffer and sends the telemetry items in <see cref="F:Microsoft.HockeyApp.Channel.InMemoryTransmitter.sendingInterval"/> intervals or when 
            <see cref="F:Microsoft.HockeyApp.Channel.InMemoryTransmitter.startRunnerEvent" /> is set.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.InMemoryTransmitter.OnBufferFull">
            <summary>
            Happens when the in-memory buffer is full. Flushes the in-memory buffer and sends the telemetry items.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.InMemoryTransmitter.DequeueAndSend">
            <summary>
            Flushes the in-memory buffer and send it.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.InMemoryTransmitter.Send(System.Collections.Generic.IEnumerable{Microsoft.HockeyApp.Channel.ITelemetry})">
            <summary>
            Serializes a list of telemetry items and sends them.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Channel.ITelemetry">
            <summary>
            The base telemetry type for application insights.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.ITelemetry.Timestamp">
            <summary>
            Gets or sets date and time when telemetry was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.ITelemetry.Context">
            <summary>
            Gets the context associated with this telemetry instance.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.ITelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
            <remarks>
            The sequence is used to track absolute order of uploaded telemetry items. It is a two-part value that includes 
            a stable identifier for the current boot session and an incrementing identifier for each event added to the upload queue:
            For UTC this would increment for all events across the system.
            For Persistence this would increment for all events emitted from the hosting process.    
            The Sequence helps track how many events were fired and how many events were uploaded and enables identification 
            of data lost during upload and de-duplication of events on the ingress server.
            From <a href="https://microsoft.sharepoint.com/teams/CommonSchema/Shared%20Documents/Schema%20Specs/Common%20Schema%202%20-%20Language%20Specification.docx"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.ITelemetry.Sanitize">
            <summary>
            Sanitizes the properties of the telemetry item based on DP constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Channel.ITelemetryChannel">
            <summary>
            Represents a communication channel for sending telemetry to application insights.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.ITelemetryChannel.DeveloperMode">
            <summary>
            Gets or sets a value indicating whether this channel is in developer mode.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.ITelemetryChannel.EndpointAddress">
            <summary>
            Gets or sets the endpoint address of the channel.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.ITelemetryChannel.Send(Microsoft.HockeyApp.Channel.ITelemetry)">
            <summary>
            Sends an instance of ITelemetry through the channel.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.ITelemetryChannel.Flush">
            <summary>
            Flushes the in-memory buffer.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Channel.TelemetryBuffer">
            <summary>
            Accumulates <see cref="T:Microsoft.HockeyApp.Channel.ITelemetry"/> items for efficient transmission.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.TelemetryBuffer.OnFull">
            <summary>
            Delegate that is raised when the buffer is full.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.TelemetryBuffer.Capacity">
            <summary>
            Gets or sets the maximum number of telemetry items that can be buffered before transmission.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is zero or less.</exception>
        </member>
        <member name="T:Microsoft.HockeyApp.Channel.Transmission">
            <summary>
            Implements an asynchronous transmission of data to an HTTP POST endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.Transmission.#ctor(System.Uri,System.Byte[],System.String,System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Channel.Transmission"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.Transmission.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Channel.Transmission"/> class. This overload is for Test purposes. 
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.Transmission.EndpointAddress">
            <summary>
            Gets the Address of the endpoint to which transmission will be sent.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.Transmission.Content">
            <summary>
            Gets the content of the transmission.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.Transmission.ContentType">
            <summary>
            Gets the content's type of the transmission.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.Transmission.ContentEncoding">
            <summary>
            Gets the encoding method of the transmission.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.Transmission.Timeout">
            <summary>
            Gets a timeout value for the transmission.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.Transmission.Id">
            <summary>
            Gets an id of the transmission.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.Transmission.SendAsync">
            <summary>
            Executes the request that the current transmission represents.
            </summary>
            <returns>The task to await.</returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Channel.FlushManager">
            <summary>
            This class handles all the logic for flushing the In Memory buffer to the persistent storage. 
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.FlushManager.telemetryBuffer">
            <summary>
            The memory buffer. 
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.FlushManager.flushWaitHandle">
            <summary>
            A wait handle that signals when a flush is required. 
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.FlushManager.storage">
            <summary>
            The storage that is used to persist all the transmissions. 
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.FlushManager.disposeCount">
            <summary>
            The number of times this object was disposed.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.FlushManager.flushLoopEnabled">
            <summary>
            A boolean value that determines if the long running thread that runs flush in a loop will stay alive. 
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.FlushManager.#ctor(Microsoft.HockeyApp.Services.BaseStorageService,Microsoft.HockeyApp.Channel.TelemetryBuffer,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Channel.FlushManager"/> class.
            </summary>        
            <param name="storage">The storage that persists the telemetries.</param>
            <param name="telemetryBuffer">In memory buffer that holds telemetries.</param>
            <param name="supportAutoFlush">A boolean value that determines if flush will happen automatically. Used by unit tests.</param>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.FlushManager.FlushDelay">
            <summary>
            Gets or sets the maximum telemetry batching interval. Once the interval expires, <see cref="T:Microsoft.HockeyApp.Channel.PersistenceTransmitter"/> 
            persists the accumulated telemetry items.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.FlushManager.EndpointAddress">
            <summary>
            Gets or sets the service endpoint. 
            </summary>
            <remarks>
            Q: Why flushManager knows about the endpoint? 
            A: Storage stores Transmission objects and Transmission objects contain the endpoint address.
            </remarks>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.FlushManager.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.FlushManager.Flush">
            <summary>
            Persist the in-memory telemetry items.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.FlushManager.FlushLoop">
            <summary>
            Flushes in intervals set by <see cref="P:Microsoft.HockeyApp.Channel.FlushManager.FlushDelay"/>.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.FlushManager.OnTelemetryBufferFull">
            <summary>
            Handles the full event coming from the TelemetryBuffer.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Channel.PersistenceChannel">
            <summary>
            Represents a communication channel for sending telemetry to Application Insights via HTTPS.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.PersistenceChannel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Channel.PersistenceChannel"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.PersistenceChannel.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Channel.PersistenceChannel"/> class.
            </summary>
            <param name="storageFolderName">
            A folder name. Under this folder all the transmissions will be saved. 
            Setting this value groups channels, even from different processes. 
            If 2 (or more) channels has the same <c>storageFolderName</c> only one channel will perform the sending even if the channel is in a different process/AppDomain/Thread.  
            </param>
            <param name="sendersCount">
            Defines the number of senders. A sender is a long-running thread that sends telemetry batches in intervals defined by <see cref="P:Microsoft.HockeyApp.Channel.PersistenceChannel.SendingInterval"/>. 
            So the amount of senders also defined the maximum amount of http channels opened at the same time.
            </param>        
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceChannel.StorageUniqueFolder">
            <summary>
            Gets the storage unique folder.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceChannel.DeveloperMode">
            <summary>
            Gets or sets a value indicating whether developer mode of telemetry transmission is enabled.
            When developer mode is True, <see cref="T:Microsoft.HockeyApp.Channel.PersistenceChannel"/> sends telemetry to Application Insights immediately 
            during the entire lifetime of the application. When developer mode is False, <see cref="T:Microsoft.HockeyApp.Channel.PersistenceChannel"/>
            respects production sending policies defined by other properties.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceChannel.SendingInterval">
            <summary>
            Gets or sets an interval between each successful sending.
            </summary>
            <remarks>On error scenario this value is ignored and the interval will be defined using an exponential back-off algorithm.</remarks>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceChannel.FlushInterval">
            <summary>
            Gets or sets the interval between each flush to disk. 
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceChannel.EndpointAddress">
            <summary>
            Gets or sets the HTTP address where the telemetry is sent.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceChannel.MaxTelemetryBufferCapacity">
            <summary>
            Gets or sets the maximum number of telemetry items that will accumulate in a memory before 
            <see cref="T:Microsoft.HockeyApp.Channel.PersistenceChannel"/> persists them to disk.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceChannel.MaxTransmissionStorageCapacity">
            <summary>
            Gets or sets the maximum amount of disk space, in bytes, that <see cref="T:Microsoft.HockeyApp.Channel.PersistenceChannel"/> will 
            use for storage.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceChannel.MaxTransmissionStorageFilesCapacity">
            <summary>
            Gets or sets the maximum amount of files allowed in storage. When the limit is reached telemetries will be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceChannel.StopUploadAfterIntervalInSeconds">
            <summary>
            Gets or sets the amount of time, in seconds, after application is started when the 
            <see cref="T:Microsoft.HockeyApp.Channel.PersistenceChannel"/> will send telemetry to data collector. Once the specified 
            amount of time runs out, telemetry will be stored on disk until the application is started again.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceChannel.DataUploadIntervalInSeconds">
            <summary>
            Gets or sets the maximum telemetry batching interval. Once the interval expires, <see cref="T:Microsoft.HockeyApp.Channel.PersistenceChannel"/> 
            persists the accumulated telemetry items.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceChannel.MaxTransmissionBufferCapacity">
            <summary>
            Gets or sets the maximum amount of memory, in bytes, that <see cref="T:Microsoft.HockeyApp.Channel.PersistenceChannel"/> will use 
            to buffer transmissions before sending them to Application Insights.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceChannel.MaxTransmissionSenderCapacity">
            <summary>
            Gets or sets the maximum number of telemetry transmissions that <see cref="T:Microsoft.HockeyApp.Channel.PersistenceChannel"/> will 
            send to Application Insights at the same time.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.PersistenceChannel.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.PersistenceChannel.Send(Microsoft.HockeyApp.Channel.ITelemetry)">
            <summary>
            Sends an instance of ITelemetry through the channel.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.PersistenceChannel.Flush">
            <summary>
            Flushes the in-memory buffer to disk. 
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Channel.PersistenceTransmitter">
            <summary>
            Implements throttled and persisted transmission of telemetry to Application Insights. 
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.PersistenceTransmitter.senders">
            <summary>
            A list of senders that sends transmissions. 
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.PersistenceTransmitter.storage">
            <summary>
            The storage that is used to persist all the transmissions. 
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.PersistenceTransmitter.disposeCount">
            <summary>
            The number of times this object was disposed.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.PersistenceTransmitter.#ctor(Microsoft.HockeyApp.Services.BaseStorageService,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Channel.PersistenceTransmitter"/> class.
            </summary>
            <param name="storage">The transmissions storage.</param>
            <param name="sendersCount">The number of senders to create.</param>
            <param name="createSenders">A boolean value that indicates if this class should try and create senders. This is a workaround for unit tests purposes only.</param>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceTransmitter.StorageUniqueFolder">
            <summary>
            Gets a unique folder name. This folder will be used to store the transmission files.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.PersistenceTransmitter.SendingInterval">
            <summary>
            Gets or sets the interval between each successful sending. 
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.PersistenceTransmitter.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.PersistenceTransmitter.SendForDeveloperMode(Microsoft.HockeyApp.Channel.ITelemetry,System.String)">
            <summary>
            Sending the item to the endpoint immediately without persistence.
            </summary>
            <param name="item">Telemetry item.</param>
            <param name="endpointAddress">Server endpoint address.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.PersistenceTransmitter.StopSenders">
            <summary>
            Stops the senders.  
            </summary>
            <remarks>As long as there is no Start implementation, this method should only be called from Dispose.</remarks>
        </member>
        <member name="T:Microsoft.HockeyApp.Channel.Sender">
            <summary>
            Fetch transmissions from the storage and sends it. 
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.Sender.DelayHandler">
            <summary>
            A wait handle that flags the sender when to start sending again. The type is protected for unit test.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.Sender.sendingIntervalOnNoData">
            <summary>
            When storage is empty it will be queried again after this interval.
            Decreasing to 5 sec to send first data (users and sessions). 
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.Sender.maxIntervalBetweenRetries">
            <summary>
            Holds the maximum time for the exponential back-off algorithm. The sending interval will grow on every HTTP Exception until this max value.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.Sender.stoppedHandler">
            <summary>
            A wait handle that is being set when Sender is no longer sending.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.Sender.defaultSendingInterval">
            <summary>
            The default sending interval.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.Sender.stopped">
            <summary>
            A boolean value that indicates if the sender should be stopped. The sender's while loop is checking this boolean value.  
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.Sender.drainingTimeout">
            <summary>
            The amount of time to wait, in the stop method, until the last transmission is sent. 
            If time expires, the stop method will return even if the transmission hasn't been sent. 
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.Sender.storage">
            <summary>
            The transmissions storage.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.Sender.disposeCount">
            <summary>
            The number of times this object was disposed.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Channel.Sender.transmitter">
            <summary>
            Holds the transmitter.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.Sender.#ctor(Microsoft.HockeyApp.Services.BaseStorageService,Microsoft.HockeyApp.Channel.PersistenceTransmitter,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.Channel.Sender"/> class.
            </summary>
            <param name="storage">The storage that holds the transmissions to send.</param>
            <param name="transmitter">
            The persistence transmitter that manages this Sender. 
            The transmitter will be used as a configuration class, it exposes properties like SendingInterval that will be read by Sender.
            </param>
            <param name="startSending">A boolean value that determines if Sender should start sending immediately. This is only used for unit tests.</param>
        </member>
        <member name="P:Microsoft.HockeyApp.Channel.Sender.SendingInterval">
            <summary>
            Gets the interval between each successful sending.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.Sender.Dispose">
            <summary>
            Disposes the managed objects.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.Sender.StopAsync">
            <summary>
            Stops the sender. 
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.Sender.SendLoop">
            <summary>
            Send transmissions in a loop. 
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.Sender.Send(Microsoft.HockeyApp.Channel.StorageTransmission,System.TimeSpan@)">
            <summary>
            Sends a transmission and handle errors.
            </summary>
            <param name="transmission">The transmission to send.</param>
            <param name="nextSendInterval">When this value returns it will hold a recommendation for when to start the next sending iteration.</param>
            <returns>True, if there was sent error and we need to retry sending, otherwise false.</returns>        
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.Sender.LogInterval(System.TimeSpan,System.TimeSpan)">
            <summary>
            Log next interval. Only log the interval when it changes by more then a minute. So if interval grow by 1 minute or decreased by 1 minute it will be logged. 
            Logging every interval will just make the log noisy. 
            </summary>        
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.Sender.GetStatusCode(System.Net.WebException)">
            <summary>
            Return the status code from the web exception or null if no such code exists. 
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.Sender.IsRetryable(System.Nullable{System.Int32},System.Net.WebExceptionStatus)">
            <summary>
            Returns true if <paramref name="httpStatusCode" /> or <paramref name="webExceptionStatus" /> are retriable.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.Sender.CalculateNextInterval(System.Nullable{System.Int32},System.TimeSpan,System.TimeSpan)">
            <summary>
            Calculates the next interval using exponential back-off algorithm (with the exceptions of few error codes that reset the interval to <see cref="P:Microsoft.HockeyApp.Channel.Sender.SendingInterval"/>.
            </summary>        
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.StorageTransmission.Dispose">
            <summary>
            Disposing the storage transmission.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.StorageTransmission.CreateFromStreamAsync(System.IO.Stream,System.String)">
            <summary>
            Creates a new transmission from the specified <paramref name="stream"/>.
            </summary>
            <returns>Return transmission loaded from file; return null if the file is corrupted.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Channel.StorageTransmission.SaveAsync(Microsoft.HockeyApp.Channel.Transmission,System.IO.Stream)">
            <summary>
            Saves the transmission to the specified <paramref name="stream"/>.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.CrashTelemetry">
            <summary>
            Telemetry type used to track crashes.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.CrashTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetry.#ctor(Microsoft.HockeyApp.Extensibility.Implementation.External.CrashData)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.CrashTelemetry" /> class.
            </summary>
            <param name="crash">The crash.</param>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when event was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetry.Headers">
            <summary>
            Gets the headers.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetry.Threads">
            <summary>
            Gets the threads.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetry.Binaries">
            <summary>
            Gets the binaries.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetry.HandledAt">
            <summary>
            Gets or sets the value indicated where the exception was handled.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetry.Microsoft#HockeyApp#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary">
            <summary>
            The type used to specify binary properties of a crash.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary.#ctor(Microsoft.HockeyApp.Extensibility.Implementation.External.CrashDataBinary)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary" /> class.
            </summary>
            <param name="binary">The binary.</param>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary.StartAddress">
            <summary>
            Gets or sets the start load memory address for this binary.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary.EndAddress">
            <summary>
            Gets or sets the end load memory address for this binary.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary.Name">
            <summary>
            Gets or sets the name for this binary.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary.CpuType">
            <summary>
            Gets or sets the CPU type that this binary was built for.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary.CpuSubType">
            <summary>
            Gets or sets the CPU sub-type that this binary was built for.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary.Uuid">
            <summary>
            Gets or sets the unique identifier for this binary.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary.Path">
            <summary>
            Gets or sets the load path for this binary.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetryBinary.Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders">
            <summary>
            The type used to specify header properties of a crash.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.#ctor(Microsoft.HockeyApp.Extensibility.Implementation.External.CrashDataHeaders)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders" /> class.
            </summary>
            <param name="headers">The headers.</param>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.Id">
            <summary>
            Gets or sets the identifier for this crash.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.Process">
            <summary>
            Gets or sets the process name for this crash.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.ProcessId">
            <summary>
            Gets or sets the process identifier.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.ParentProcess">
            <summary>
            Gets or sets the parent process name.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.ParentProcessId">
            <summary>
            Gets or sets the parent process identifier.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.CrashThreadId">
            <summary>
            Gets or sets the crash thread identifier.
            </summary>>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.ApplicationPath">
            <summary>
            Gets or sets the application path.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.ApplicationId">
            <summary>
            Gets or sets the application identifier.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.ExceptionType">
            <summary>
            Gets or sets the type of the exception.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.ExceptionCode">
            <summary>
            Gets or sets the exception code.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.ExceptionAddress">
            <summary>
            Gets or sets the exception address.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.ExceptionReason">
            <summary>
            Gets or sets the exception reason.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetryHeaders.Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.CrashTelemetryThread">
            <summary>
            The type used to specify thread properties of a crash.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetryThread.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.CrashTelemetryThread"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetryThread.#ctor(Microsoft.HockeyApp.Extensibility.Implementation.External.CrashDataThread)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.CrashTelemetryThread" /> class.
            </summary>
            <param name="thread">The thread.</param>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryThread.Id">
            <summary>
            Gets or sets the identifier for this thread.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryThread.Frames">
            <summary>
            Gets the set of frames that have been captured for this thread.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetryThread.Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.CrashTelemetryThreadFrame">
            <summary>
            The type used to specify frame properties of a crash.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetryThreadFrame.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.CrashTelemetryThreadFrame"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetryThreadFrame.#ctor(Microsoft.HockeyApp.Extensibility.Implementation.External.CrashDataThreadFrame)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.CrashTelemetryThreadFrame"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryThreadFrame.Address">
            <summary>
            Gets or sets the memory address for this frame.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryThreadFrame.Symbol">
            <summary>
            Gets or sets the symbol (if any) for this frame.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.CrashTelemetryThreadFrame.Registers">
            <summary>
            Gets the set of registers we want to record for this frame.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.CrashTelemetryThreadFrame.Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.EventTelemetry">
            <summary>
            Telemetry type used to track events.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.EventTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.EventTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.EventTelemetry.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.EventTelemetry"/> class with the given <paramref name="name"/>.
            </summary>
            <exception cref="T:System.ArgumentException">The event <paramref name="name"/> is null or empty string.</exception>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.EventTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when event was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.EventTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.EventTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.EventTelemetry.Name">
            <summary>
            Gets or sets the name of the event.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.EventTelemetry.Metrics">
            <summary>
            Gets a dictionary of application-defined event metrics.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.EventTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this event.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.EventTelemetry.Microsoft#HockeyApp#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.ExceptionHandledAt">
            <summary>
            This enumeration is used by ExceptionTelemetry to identify if and where exception was handled.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.DataContracts.ExceptionHandledAt.Unhandled">
            <summary>
            Exception was not handled. Application crashed.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.DataContracts.ExceptionHandledAt.UserCode">
            <summary>
            Exception was handled in user code.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.DataContracts.ExceptionHandledAt.Platform">
            <summary>
            Exception was handled by some platform handlers.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry">
            <summary>
            Telemetry type used to track exceptions.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry"/> class with empty properties.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry"/> class with empty properties.
            </summary>
            <param name="exception">Exception instance.</param>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when telemetry was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry.HandledAt">
            <summary>
            Gets or sets the value indicated where the exception was handled.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry.Exception">
            <summary>
            Gets or sets the original exception tracked by this <see cref="T:Microsoft.HockeyApp.Channel.ITelemetry"/>.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry.Metrics">
            <summary>
            Gets a dictionary of application-defined exception metrics.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry.Properties">
            <summary>
            Gets properties.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry.SeverityLevel">
            <summary>
            Gets or sets Exception severity level.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry.Microsoft#HockeyApp#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.IJsonSerializable">
            <summary>
            Represents objects that support serialization to JSON.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonSerializable.Serialize(Microsoft.HockeyApp.DataContracts.IJsonWriter)">
            <summary>
            Writes JSON representation of the object to the specified <paramref name="writer"/>.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.IJsonWriter">
            <summary>
            Encapsulates logic for serializing objects to JSON. 
            </summary>
            <seealso cref="T:Microsoft.HockeyApp.DataContracts.IJsonSerializable"/>.
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteStartArray">
            <summary>
            Writes opening/left square bracket.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteStartObject">
            <summary>
            Writes opening/left curly brace.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteEndArray">
            <summary>
            Writes closing/right square bracket.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteEndObject">
            <summary>
            Writes closing/right curly brace.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteComma">
            <summary>
            Writes comma.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteProperty(System.String,System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteProperty(System.String,System.Nullable{System.Boolean})">
            <summary>
            Writes a <see cref="T:System.Boolean"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteProperty(System.String,System.Nullable{System.Int32})">
            <summary>
            Writes a <see cref="T:System.Int32"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteProperty(System.String,System.Nullable{System.Double})">
            <summary>
            Writes a <see cref="T:System.Double"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteProperty(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Writes a <see cref="T:System.TimeSpan"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteProperty(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteProperty(System.String,System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary>
            Writes a <see cref="T:System.Collections.Generic.IDictionary`2"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteProperty(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes a <see cref="T:System.Collections.Generic.IDictionary`2"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteProperty(System.String,Microsoft.HockeyApp.DataContracts.IJsonSerializable)">
            <summary>
            Writes an <see cref="T:Microsoft.HockeyApp.DataContracts.IJsonSerializable"/> object property.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WritePropertyName(System.String)">
            <summary>
            Writes a property name in double quotation marks, followed by a colon.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.IJsonWriter.WriteRawValue(System.Object)">
            <summary>
            Writes <see cref="T:System.Object"/> as raw value directly.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.InnerExceptionCountExceededException">
            <summary>
            This exception is used to notify the user that the set of inner exceptions has been trimmed because it exceeded our allowed send limit.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.InnerExceptionCountExceededException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.InnerExceptionCountExceededException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.InnerExceptionCountExceededException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.InnerExceptionCountExceededException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error. </param>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.InnerExceptionCountExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.InnerExceptionCountExceededException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception. </param><param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.ISupportProperties">
            <summary>
            Represents an object that supports application-defined properties.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.ISupportProperties.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about telemetry.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.MetricTelemetry">
            <summary>
            Telemetry type used to track metrics.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.MetricTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.MetricTelemetry"/> class with empty 
            properties.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.MetricTelemetry.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.MetricTelemetry"/> class with the 
            specified <paramref name="metricName"/> and <paramref name="metricValue"/>.
            </summary>
            <exception cref="T:System.ArgumentException">The <paramref name="metricName"/> is null or empty string.</exception>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.MetricTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when event was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.MetricTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.MetricTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.MetricTelemetry.Name">
            <summary>
            Gets or sets the name of the metric.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.MetricTelemetry.Value">
            <summary>
            Gets or sets the value of this metric.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.MetricTelemetry.Count">
            <summary>
            Gets or sets the number of samples for this metric.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.MetricTelemetry.Min">
            <summary>
            Gets or sets the min value of this metric.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.MetricTelemetry.Max">
            <summary>
            Gets or sets the max value of this metric.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.MetricTelemetry.StandardDeviation">
            <summary>
            Gets or sets the standard deviation of this metric.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.MetricTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this metric.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.MetricTelemetry.Microsoft#HockeyApp#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.PageViewTelemetry">
            <summary>
            Telemetry type used to track page views.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.PageViewTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.PageViewTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.PageViewTelemetry.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.PageViewTelemetry"/> class with the 
            specified <paramref name="pageName"/>.
            </summary>
            <exception cref="T:System.ArgumentException">The <paramref name="pageName"/> is null or empty string.</exception>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PageViewTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when event was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PageViewTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PageViewTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PageViewTelemetry.Name">
            <summary>
            Gets or sets the name of the metric.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PageViewTelemetry.Url">
            <summary>
            Gets or sets the page view Uri.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PageViewTelemetry.Duration">
            <summary>
            Gets or sets the page view duration.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PageViewTelemetry.Metrics">
            <summary>
            Gets a dictionary of custom defined metrics.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PageViewTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this page view.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.PageViewTelemetry.Microsoft#HockeyApp#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry">
            <summary>
            The class that represents information about performance counters.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry.#ctor(System.String,System.String,System.String,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry"/> class.
            </summary>
            <param name="categoryName">Category name.</param>
            <param name="counterName">Performance counter name.</param>
            <param name="instanceName">Instance name.</param>
            <param name="value">Performance counter value.</param>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when telemetry was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry.Value">
            <summary>
            Gets or sets the counter value.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry.CategoryName">
            <summary>
            Gets or sets the category name.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry.CounterName">
            <summary>
            Gets or sets the counter name.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry.InstanceName">
            <summary>
            Gets or sets the instance name.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this exception.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.PerformanceCounterTelemetry.Microsoft#HockeyApp#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.DependencyTelemetry">
            <summary>
            The class that represents information about the collected dependency.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.DependencyTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.#ctor(System.String,System.String,System.DateTimeOffset,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.DependencyTelemetry"/> class with the given <paramref name="dependencyName"/>, <paramref name="commandName"/>, 
            <paramref name="startTime"/>, <paramref name="duration"/> and <paramref name="success"/> property values.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when telemetry was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.Name">
            <summary>
            Gets or sets resource name.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.CommandName">
            <summary>
            Gets or sets text of SQL command or empty it not applicable.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.DependencyTypeName">
            <summary>
            Gets or sets the dependency type name.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.StartTime">
            <summary>
            Gets or sets the date and time when dependency was called by the application.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.Duration">
            <summary>
            Gets or sets dependency call duration.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.Count">
            <summary>
            Gets or sets request count.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.Success">
            <summary>
            Gets or sets a value indicating whether the dependency call was successful or not.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.Async">
            <summary>
            Gets or sets a value indicating whether the dependency call was made asynchronously or not.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this remote dependency.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.DependencyKind">
            <summary>
            Gets or sets the dependency kind, like SQL, HTTP, Azure, etc.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.DependencyTelemetry.Microsoft#HockeyApp#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.RequestTelemetry">
            <summary>
            Encapsulates information about a web request handled by the application.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.RequestTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.RequestTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.RequestTelemetry.#ctor(System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.RequestTelemetry"/> class with the given <paramref name="name"/>, 
            <paramref name="startTime"/>, <paramref name="duration"/>, <paramref name="responseCode"/> and <paramref name="success"/> property values.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when telemetry was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.StartTime">
            <summary>
            Gets or sets the date and time when request was processed by the application.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.Context">
            <summary>
            Gets the object that contains contextual information about the application at the time when it handled the request.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.Id">
            <summary>
            Gets or sets the unique identifier of the request.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.Name">
            <summary>
            Gets or sets human-readable name of the requested page.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.ResponseCode">
            <summary>
            Gets or sets response code returned by the application after handling the request.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.Success">
            <summary>
            Gets or sets a value indicating whether application handled the request successfully.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.Duration">
            <summary>
            Gets or sets the amount of time it took the application to handle the request.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this request.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.Url">
            <summary>
            Gets or sets request url (optional).
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.Metrics">
            <summary>
            Gets a dictionary of application-defined request metrics.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.RequestTelemetry.HttpMethod">
            <summary>
            Gets or sets the HTTP method of the request.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.RequestTelemetry.Microsoft#HockeyApp#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.SessionState">
            <summary>
            Contains values that identify state of a user session.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.DataContracts.SessionState.Start">
            <summary>
            Indicates that a user session started.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.DataContracts.SessionState.End">
            <summary>
            Indicates that a user session ended.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.SessionStateTelemetry">
            <summary>
            Telemetry type used to track user sessions.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.SessionStateTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.SessionStateTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.SessionStateTelemetry.#ctor(Microsoft.HockeyApp.DataContracts.SessionState)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.SessionStateTelemetry"/> class with the specified <paramref name="state"/>.
            </summary>
            <param name="state">
            A <see cref="T:Microsoft.HockeyApp.DataContracts.SessionState"/> value indicating state of the user session.
            </param>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.SessionStateTelemetry.Timestamp">
            <summary>
            Gets or sets the date and time the session state was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.SessionStateTelemetry.Context">
            <summary>
            Gets the <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/> of the application when the session state was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.SessionStateTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.SessionStateTelemetry.State">
            <summary>
            Gets or sets the value describing state of the user session.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.SessionStateTelemetry.Microsoft#HockeyApp#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes this telemetry instance to ensure it can be accepted by the Application Insights.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.TelemetryContext">
            <summary>
            Represents a context for sending telemetry to the Application Insights service.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.TelemetryContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TelemetryContext.InstrumentationKey">
            <summary>
            Gets or sets the default instrumentation key for all <see cref="T:Microsoft.HockeyApp.Channel.ITelemetry"/> objects logged in this <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/>.
            </summary>
            <remarks>
            By default, this property is initialized with the <see cref="P:Microsoft.HockeyApp.TelemetryConfiguration.InstrumentationKey"/> value
            of the <see cref="P:Microsoft.HockeyApp.TelemetryConfiguration.Active"/> instance of <see cref="T:Microsoft.HockeyApp.TelemetryConfiguration"/>. 
            </remarks>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TelemetryContext.Component">
            <summary>
            Gets the object describing the component tracked by this <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TelemetryContext.Device">
            <summary>
            Gets the object describing the device tracked by this <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TelemetryContext.Session">
            <summary>
            Gets the object describing a user session tracked by this <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TelemetryContext.User">
            <summary>
            Gets the object describing a user tracked by this <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TelemetryContext.Operation">
            <summary>
            Gets the object describing a operation tracked by this <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TelemetryContext.Location">
            <summary>
            Gets the object describing a location tracked by this <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext" />.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TelemetryContext.Properties">
            <summary>
            Gets a dictionary of application-defined property values.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TelemetryContext.Tags">
            <summary>
            Gets a dictionary of context tags.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.TelemetryContext.Microsoft#HockeyApp#DataContracts#IJsonSerializable#Serialize(Microsoft.HockeyApp.DataContracts.IJsonWriter)">
            <summary>
            Serializes this object in JSON format.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.DataContracts.TraceTelemetry">
            <summary>
            Telemetry type used for log messages.
            Contains a time and message and optionally some additional metadata.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.TraceTelemetry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.TraceTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.TraceTelemetry.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.TraceTelemetry"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.TraceTelemetry.#ctor(System.String,Microsoft.HockeyApp.SeverityLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.DataContracts.TraceTelemetry"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TraceTelemetry.Timestamp">
            <summary>
            Gets or sets date and time when event was recorded.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TraceTelemetry.Sequence">
            <summary>
            Gets or sets the value that defines absolute order of the telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TraceTelemetry.Context">
            <summary>
            Gets the context associated with the current telemetry item.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TraceTelemetry.Message">
            <summary>
            Gets or sets the message text. For example, the text that would normally be written to a log file line.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TraceTelemetry.SeverityLevel">
            <summary>
            Gets or sets Trace severity level.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.DataContracts.TraceTelemetry.Properties">
            <summary>
            Gets a dictionary of application-defined property names and values providing additional information about this trace.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.DataContracts.TraceTelemetry.Microsoft#HockeyApp#Channel#ITelemetry#Sanitize">
            <summary>
            Sanitizes the properties based on constraints.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.SeverityLevel">
            <summary>
            This enumeration is used by ExceptionTelemetry and TraceTelemetry to identify severity level.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.SeverityLevel.Verbose">
            <summary>
            Verbose severity level.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.SeverityLevel.Information">
            <summary>
            Information severity level.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.SeverityLevel.Warning">
            <summary>
            Warning severity level.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.SeverityLevel.Error">
            <summary>
            Error severity level.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.SeverityLevel.Critical">
            <summary>
            Critical severity level.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.TelemetryConfiguration">
            <summary>
            Encapsulates the global telemetry configuration typically loaded from the configuration file.
            </summary>
            <remarks>
            All <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/> objects are initialized using the <see cref="P:Microsoft.HockeyApp.TelemetryConfiguration.Active"/> 
            telemetry configuration provided by this class.
            </remarks>
        </member>
        <member name="M:Microsoft.HockeyApp.TelemetryConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.HockeyApp.TelemetryConfiguration" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.TelemetryConfiguration.Collectors">
            <summary>
            Gets or sets Windows Collectors.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.TelemetryConfiguration.EndpointAddress">
            <summary>
            Gets or sets Endpoint address.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.TelemetryConfiguration.EnableDiagnostics">
            <summary>
            Gets or sets a value indicating whether the internal diagnostics is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.TelemetryConfiguration.Active">
            <summary>
            Gets or sets the active <see cref="T:Microsoft.HockeyApp.TelemetryConfiguration"/> instance loaded from the configuration file. 
            If the configuration file does not exist, the active configuration instance is initialized with minimum defaults 
            needed to send telemetry to Application Insights.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.TelemetryConfiguration.InstrumentationKey">
            <summary>
            Gets or sets the default instrumentation key for the application.
            </summary>
            <exception cref="T:System.ArgumentNullException">The new value is null.</exception>
        </member>
        <member name="P:Microsoft.HockeyApp.TelemetryConfiguration.DisableTelemetry">
            <summary>
            Gets or sets a value indicating whether sending of telemetry to Application Insights is disabled.
            </summary>
            <remarks>
            This disable tracking setting value is used by default by all instances created in the application. 
            </remarks>
        </member>
        <member name="P:Microsoft.HockeyApp.TelemetryConfiguration.ContextInitializers">
            <summary>
            Gets the list of <see cref="T:Microsoft.HockeyApp.Extensibility.IContextInitializer"/> objects that supply additional information about application.
            </summary>
            <remarks>
            Context initializers extend Application Insights telemetry collection by supplying additional information 
            about application environment, such as <see cref="P:Microsoft.HockeyApp.DataContracts.TelemetryContext.User"/> or <see cref="P:Microsoft.HockeyApp.DataContracts.TelemetryContext.Device"/> 
            information that remains constant during application lifetime. A client invokes context 
            initializers to obtain initial property values for <see cref="T:Microsoft.HockeyApp.DataContracts.TelemetryContext"/> object during its construction.
            The default list of context initializers is provided by the Application Insights NuGet packages and loaded from 
            the configuration file located in the application directory. 
            </remarks>
        </member>
        <member name="P:Microsoft.HockeyApp.TelemetryConfiguration.TelemetryInitializers">
            <summary>
            Gets the list of <see cref="T:Microsoft.HockeyApp.Extensibility.ITelemetryInitializer"/> objects that supply additional information about telemetry.
            </summary>
            <remarks>
            Telemetry initializers extend Application Insights telemetry collection by supplying additional information 
            about individual <see cref="T:Microsoft.HockeyApp.Channel.ITelemetry"/> items, such as <see cref="P:Microsoft.HockeyApp.Channel.ITelemetry.Timestamp"/>. A telemetry client
            invokes telemetry initializers each time track method is called.
            The default list of telemetry initializers is provided by the Application Insights NuGet packages and loaded from 
            the configuration file located in the application directory. 
            </remarks>
        </member>
        <member name="P:Microsoft.HockeyApp.TelemetryConfiguration.TelemetryChannel">
            <summary>
            Gets or sets the telemetry channel.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.TelemetryConfiguration.Dispose">
            <summary>
            Releases resources used by the current instance of the <see cref="T:Microsoft.HockeyApp.TelemetryConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.TelemetryConfiguration.CreateDefault">
            <summary>
            Creates a new <see cref="T:Microsoft.HockeyApp.TelemetryConfiguration"/> instance loaded from the configuration file.
            If the configuration file does not exist, the new configuration instance is initialized with minimum defaults 
            needed to send telemetry to Application Insights.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.WindowsCollectors">
            <summary>
            Windows auto collectors provide automatic collection of telemetry context and automatic collection of telemetry data points for Windows Applications.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.WindowsCollectors.Metadata">
            <summary>
            Collector to auto populate TelemetryContext for all telemetry.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.WindowsCollectors.Session">
            <summary>
            Auto collection of user and session information from application startup.
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.WindowsCollectors.UnhandledException">
            <summary>
            Auto collection of application crashes from unhandled exception handler. 
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Utils">
            <summary>
            Various utilities.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Utils.PopulateRequiredStringValue(System.String,System.String,System.String)">
            <summary>
            Validates the string and if null or empty populates it with '$parameterName is a required field for $telemetryType' value.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Utils.ValidateDuration(System.String)">
            <summary>
            Returns default Timespan value if not a valid Timespan.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Exceptions.NamespaceDoc">
            <summary>
            Namespace for custom exceptions
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Exceptions.WebTransferException">
            <summary>
            Exception used for indication an exception during datatransfer to the server like a connection timeout. ( => Try again later )
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Exceptions.WebTransferException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Exceptions.WebTransferException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:Microsoft.HockeyApp.Exceptions.WebTransferException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="inner">Exception causing the exception</param>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensions.ExceptionExtension">
            <summary>
            static extension class for extensions on exception
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensions.ExceptionExtension.StackTraceToString(System.Exception)">
            <summary>
            build a formatted string from the stacktrace of an exception
            </summary>
            <param name="this"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensions.WebRequestExtension">
            <summary>
            static extension class
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensions.WebRequestExtension.SetHeader(System.Net.WebRequest,System.String,System.String)">
            <summary>
            Set a http header on a Web-Request. Either by setting the property or by adding to the Headers dict.
            </summary>
            <param name="request">self</param>
            <param name="header">header key</param>
            <param name="value">header value</param>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensions.AsyncLock">
            <summary>
            Helper class to implement async locking
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensions.AsyncLock.#ctor">
            <summary>
            constructor for a lock
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensions.AsyncLock.LockAsync">
            <summary>
            Get the lock.
            Usage: using(var lck = await myAsyncLock.LockAsync()) { ... }
            </summary>
            <returns>awaitable task</returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensions.TaskEx">
            <summary>
            TaskEx class to have a consistens interface with .net4.0
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensions.TaskEx.Run``1(System.Func{``0})">
            <summary>
            wrapper for Task.Run()
            </summary>
            <typeparam name="T">result type</typeparam>
            <param name="func">funct to run asyncronously</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Extensions.PortableExtensions45">
            <summary>
            static extension class for mix extensions on pcl lib
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensions.PortableExtensions45.GetResponseAsync(System.Net.WebRequest)">
            <summary>
            extension method to get web response async
            </summary>
            <param name="request">the webrequest to send</param>
            <returns>the response</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensions.PortableExtensions45.GetRequestStreamAsync(System.Net.WebRequest)">
            <summary>
            get the request stream asynchronously
            </summary>
            <param name="request">the request</param>
            <returns>the request stream to write on</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Extensions.PortableExtensions45.GetProperty(System.Type,System.String)">
            <summary>
            extension method for type to get a runtime property
            </summary>
            <param name="self">type to get the property from</param>
            <param name="propertyName">name of the property to retrieve</param>
            <returns>PropertyInfo from type</returns>
        </member>
        <member name="T:Microsoft.HockeyApp.MD5Extension">
            <summary>
            static extension class for MD5 digest creation
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.MD5Extension.GetMD5HexDigest(System.String)">
            <summary>
            string extension method to get md5 hash from string
            </summary>
            <param name="aString"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Util.MD5Core">
            <summary>
            MD5 digest algorithm
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Util.MD5Core.GetHashString(System.String,System.Text.Encoding)">
            <summary>
            Get hash from string
            </summary>
            <param name="input">string to digest</param>
            <param name="encoding">default encoding</param>
            <returns>md5 hash</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Util.MD5Core.GetHashString(System.String)">
            <summary>
            Get hash from string (utf8 encoding)
            </summary>
            <param name="input">string to digest</param>
            <returns>md5 hash</returns>
        </member>
        <member name="T:Microsoft.HockeyApp.UtilExtensions">
            <summary>
            static extension class for utility extensions
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.UtilExtensions.IsValidEmail(System.String)">
            <summary>
            Checks valid format of an email address
            </summary>
            <param name="str">string to check</param>
            <returns>true if email has correct format</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.UtilExtensions.UnixTimeStampToDateTime(System.Nullable{System.Int64})">
            <summary>
            Convert a unix epoch-timestamp to a DateTime
            </summary>
            <param name="unixTimeStamp">seconds since epoch (1.1.1970)</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.UtilExtensions.ToReadableByteString(System.Int64)">
            <summary>
            Convert a number of bytes to a short readable string
            </summary>
            <param name="byteCount">number of bytes</param>
            <returns>string representation (e.g. '3 mb')</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.UtilExtensions.ToLongUriEscapeDataString(System.String)">
            <summary>
            Converts a string to its escaped representation.
            </summary>
            <remarks>
            Uri.EscapeDataString throws when The length of stringToEscape exceeds 32766 characters.
            This method handles long strings as well.
            </remarks>
            <param name="stringToEscape">The string to escape.</param>
            <returns>A System.String that contains the escaped representation of stringToEscape.</returns>
        </member>
        <member name="T:Microsoft.HockeyApp.HockeyClient">
            <summary>
            Implements the HockeyClient singleton
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.HockeyClient.queue">
            <summary>
            Telemetry buffer of items that were tracked by the user before configuration has been initialized.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.Current">
            <summary>
            The current singleton instance of HockeyClient. Use the extension methods in the HockeyApp namespace 
            to work with the instance:
            HockeyClient.Current.Configure(..) must be called first to initialize the client!
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.ApiBase">
            <summary>
            ApiBase of HockeyApp server
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.ApiDomain">
            <summary>
            Base URL (prototcol+domainname) of HockeyApp server
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.ApiBaseVersion2">
            <summary>
            API endpoint for API v2
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.ApiBaseVersion3">
            <summary>
            API endpoint for API v3
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.UserAgentString">
            <summary>
            User agent string
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.SdkName">
            <summary>
            SDK info
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.SdkVersion">
            <summary>
            SDK Version
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.AppIdentifier">
            <summary>
            Public identifier of your app
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.VersionInfo">
            <summary>
            Version of the app as string. Normally set automatically by platform-specific SDK
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.UserID">
            <summary>
            UserID of current app user (if provided)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.ContactInformation">
            <summary>
            Contact information for current user
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.Os">
            <summary>
            Name of platform OS
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.OsVersion">
            <summary>
            Operating system version (set by platform-specific SDK if used)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.Device">
            <summary>
            Device (set by platform-specific SDK if used)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.Oem">
            <summary>
            Oem of Device (set by platform-specific SDK if used)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.Uuid">
            <summary>
            unique user id provided by platform (set by platform-specific SDK if used)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.Auid">
            <summary>
            Authorized user id (set during login process)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.Iuid">
            <summary>
            Identified user id (set during login process)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.DescriptionLoader">
            <summary>
            Delegate which can be set to add a description to a stacktrace when app crashes
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.IsTelemetryInitialized">
            <summary>
            Gets a value indicating whether telemetry client has been initialized.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TestAndSetIsConfigured">
            <summary>
            Atomically checks if Configure has been called and sets it to true.
            </summary>
            <returns>True if the method has been previously called, false otherwise</returns>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.Context">
            <summary>
            Gets or sets the current context that will be used to augment telemetry you send.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.InstrumentationKey">
            <summary>
            Gets or sets the default instrumentation key for all <see cref="T:Microsoft.HockeyApp.Channel.ITelemetry"/> objects logged.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.Channel">
            <summary>
            Gets or sets the channel used by the client helper. Note that this doesn't need to be public as a customer can create a new client 
            with a new channel via telemetry configuration.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.CheckForInitialization">
            <summary>
            Check if this HockeyClient has already been initialized (used internally by platform SDKs)
            </summary>
        </member>
        <member name="E:Microsoft.HockeyApp.HockeyClient.OnHockeySDKInternalException">
            <summary>
            Subscribe to this event to get all exceptions that are swallowed by HockeySDK.
            Useful for debugging. Be sure to know what to do if you use this in production code.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.CreateCrashData(System.Exception)">
            <summary>
            Create a CrashData object from an Exception with the default CrashLogInformation
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.CreateCrashData(System.Exception,Microsoft.HockeyApp.Model.CrashLogInformation)">
            <summary>
            Create a CrashData object from an Exception and a given CrashLogInformation
            </summary>
            <param name="ex"></param>
            <param name="crashLogInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.CreateCrashData(System.String,System.String)">
            <summary>
            create a CrashData object from a logString and stacktrace (used for Unity crashes)
            </summary>
            <param name="logString"></param>
            <param name="stackTrace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.Deserialize(System.IO.Stream)">
            <summary>
            Get an ICrashData object from crashlog-stream
            </summary>
            <param name="inputStream">stream from crashlog</param>
            <returns>deserialized CrashData object</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.GetCrashFileNamesAsync">
            <summary>
            Retrieve filenames of crashlog files from storage
            </summary>
            <returns>crashlog-filenames (only name without folder)</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.DeleteAllCrashesAsync">
            <summary>
            Delete all crash-logs from storage
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.AnyCrashesAvailableAsync">
            <summary>
            Check for available crash-logs in storage
            </summary>
            <returns>true if saved crashlogs are available</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.HandleExceptionAsync(System.Exception)">
            <summary>
            Handle exception asyncronously
            </summary>
            <param name="ex">the exception that should be saved to a crashlog</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.HandleException(System.Exception)">
            <summary>
            Handle exception syncronously (only for platforms that support sync write to storage
            </summary>
            <param name="ex">the exception that should be saved to a crashlog</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.SendCrashesAndDeleteAfterwardsAsync">
            <summary>
            Send crash-logs from storage and deletes the if they could be sent
            </summary>
            <returns>true if at least one Crashlog was transmitted to the server</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.GetAppVersionsAsync">
            <summary>
            Get available app versions from the server
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.CreateNewFeedbackThread">
            <summary>
            Create a feedback thread to post messages on
            </summary>
            <returns>an empty IFeedbackThread</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.OpenFeedbackThreadAsync(System.String)">
            <summary>
            Try to open an existng Feedbackthread
            </summary>
            <param name="threadToken">thread token for this thread</param>
            <returns>a populated feedback thread, null if the token is invalid or the thread closed.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.AuthorizeUserAsync(System.String,System.String)">
            <summary>
            try to authorize a (hockeayapp) user by email and password
            </summary>
            <param name="email">email (hockeyapp user id)</param>
            <param name="password">password of the user</param>
            <returns>IAuthStatus. If successfull will contain authid and IsAuthorized will be true</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.IdentifyUserAsync(System.String,System.String)">
            <summary>
            Identify a user by his email-adress (hockeyapp id)
            </summary>
            <param name="email">email (hockeyapp user id)</param>
            <param name="appSecret">app secret of the app</param>
            <returns>IAuthStatus. If sucessful (hockeyapp user exists) IsIdentified is true.</returns>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.PlatformHelper">
            <summary>
            Platform helper for internal use
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.HockeyClient.PrefilledCrashLogInfo">
            <summary>
            A filled CrashLogInformation object
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.HandleInternalUnhandledException(System.Exception)">
            <summary>
            Handle Exceptions that are swallowed because we don't want our SDK crash other apps
            For internal use by platform SDKs
            </summary>
            <param name="unhandledException">the exception to propagate</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackEvent(System.String)">
            <summary>
            Send a custom event for display in Events tab.
            </summary>
            <param name="eventName">Event name</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackEvent(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary>
            Send an event telemetry for display in Diagnostic Search and aggregation in Metrics Explorer.
            </summary>
            <param name="eventName">A name for the event.</param>
            <param name="properties">Named string values you can use to search and classify events.</param>
            <param name="metrics">Measurements associated with this event.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackTrace(System.String)">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackTrace(System.String,Microsoft.HockeyApp.SeverityLevel)">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <param name="message">Message to display.</param>
            <param name="severityLevel">Trace severity level.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackTrace(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <param name="message">Message to display.</param>
            <param name="properties">Named string values you can use to search and classify events.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackTrace(System.String,Microsoft.HockeyApp.SeverityLevel,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <param name="message">Message to display.</param>
            <param name="severityLevel">Trace severity level.</param>
            <param name="properties">Named string values you can use to search and classify events.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackTrace(Microsoft.HockeyApp.DataContracts.TraceTelemetry)">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <param name="telemetry">Message with optional properties.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackMetric(System.String,System.Double,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Send a <see cref="T:Microsoft.HockeyApp.DataContracts.MetricTelemetry"/> for aggregation in Metric Explorer.
            </summary>
            <param name="name">Metric name.</param>
            <param name="value">Metric value.</param>
            <param name="properties">Named string values you can use to classify and filter metrics.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackPageView(System.String)">
            <summary>
            Send information about the page viewed in the application.
            </summary>
            <param name="name">Name of the page.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackMetric(Microsoft.HockeyApp.DataContracts.MetricTelemetry)">
            <summary>
            Send a <see cref="T:Microsoft.HockeyApp.DataContracts.MetricTelemetry"/> for aggregation in Metric Explorer.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackException(System.Exception,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Send an <see cref="T:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry"/> for display in Diagnostic Search.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="properties">Named string values you can use to classify and search for this exception.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackException(Microsoft.HockeyApp.DataContracts.ExceptionTelemetry)">
            <summary>
            Send an <see cref="T:Microsoft.HockeyApp.DataContracts.ExceptionTelemetry"/> for display in Diagnostic Search.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackDependency(System.String,System.String,System.DateTimeOffset,System.TimeSpan,System.Boolean)">
            <summary>
            Send information about external dependency call in the application.
            </summary>
            <param name="dependencyName">External dependency name.</param>
            <param name="commandName">Dependency call command name.</param>
            <param name="startTime">The time when the dependency was called.</param>
            <param name="duration">The time taken by the external dependency to handle the call.</param>
            <param name="success">True if the dependency call was handled successfully.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackDependency(Microsoft.HockeyApp.DataContracts.DependencyTelemetry)">
            <summary>
            Send information about external dependency call in the application.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.Track(Microsoft.HockeyApp.Channel.ITelemetry)">
            <summary>
            This method is an internal part of Application Insights infrastructure. Do not call.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackPageView(Microsoft.HockeyApp.DataContracts.PageViewTelemetry)">
            <summary>
            Send information about the page viewed in the application.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackRequest(System.String,System.DateTimeOffset,System.TimeSpan,System.String,System.Boolean)">
            <summary>
            Send information about a request handled by the application.
            </summary>
            <param name="name">The request name.</param>
            <param name="startTime">The time when the page was requested.</param>
            <param name="duration">The time taken by the application to handle the request.</param>
            <param name="responseCode">The response status code.</param>
            <param name="success">True if the request was handled successfully by the application.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackRequest(Microsoft.HockeyApp.DataContracts.RequestTelemetry)">
            <summary>
            Send information about a request handled by the application.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.TrackEvent(Microsoft.HockeyApp.DataContracts.EventTelemetry)">
            <summary>
            Send an <see cref="T:Microsoft.HockeyApp.DataContracts.EventTelemetry"/> for display in Diagnostic Search and aggregation in Metrics Explorer.
            </summary>
            <param name="telemetry">An event log item.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.Initialize">
            <summary>
            Initializes telemetry client.
            For performance reasons, this call needs to be performed only after <see cref="T:Microsoft.HockeyApp.TelemetryConfiguration"/> has been initialized.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.IsTelemetryEnabled">
            <summary>
            Check to determine if the tracking is enabled.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClient.Flush">
            <summary>
            Clears all buffers for this telemetry stream and causes any buffered data to be written to the underlying channel.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.IHockeyClientConfigurable">
            <summary>
            Interface used during initial fluent configuration of HockeyClient
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.HockeyClientConfigurationExtensions">
            <summary>
            Extensions for fluent configuration
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClientConfigurationExtensions.SetApiDomain(Microsoft.HockeyApp.IHockeyClientConfigurable,System.String)">
            <summary>
            Use this if you're using an on-premise version of HockeyApp. Default is: https://rink.hockeyapp.net
            </summary>
            <param name="this"></param>
            <param name="hockeyApiDomain"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClientConfigurationExtensions.SetExceptionDescriptionLoader(Microsoft.HockeyApp.IHockeyClientConfigurable,System.Func{System.Exception,System.String})">
            <summary>
            The provided func is called in case of an exception and the returned string is added as additional description of the exception.
            </summary>
            <param name="this"></param>
            <param name="descriptionLoader"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClientConfigurationExtensions.SetContactInfo(Microsoft.HockeyApp.IHockeyClientConfigurable,System.String,System.String)">
            <summary>
            Set the user Id and email/contact information of the current user if known. This is sent to HockeyApp with crashes.
            </summary>
            <param name="this"></param>
            <param name="user"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.HockeyClientConfigurationExtensions.UpdateContactInfo(Microsoft.HockeyApp.IHockeyClient,System.String,System.String)">
            <summary>
            Set the user Id and emal/contact information of the current user if known. This is sent to HockeyApp with crashes.
            </summary>
            <param name="this"></param>
            <param name="user"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.HockeyApp.PCL.HockeyClientPCLExtensions">
            <summary>
            static extension class for
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.PCL.HockeyClientPCLExtensions.Configure(Microsoft.HockeyApp.IHockeyClient,Microsoft.HockeyApp.IHockeyPlatformHelper)">
            <summary>
            Configures the client with a platform helper
            </summary>
            <param name="this">The this.</param>
            <param name="platformHelper">The platform helper.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.HockeyApp.IAppVersion">
            <summary>
            interface for an app version
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.PublicIdentifier">
            <summary>
            Public identifier of your app
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.AppId">
            <summary>
            HockeyApp internal key for your app
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.Appsize">
            <summary>
            Size of the App in bytes
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.AppSizeReadable">
            <summary>
            App size in human readable form
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.DeviceFamily">
            <summary>
            Device family
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.Id">
            <summary>
            Internal id of the version 
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.Mandatory">
            <summary>
            Indicates if this version is marked as mandatory
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.MinimumOsVersion">
            <summary>
            Minimum OS requirement for this version
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.Notes">
            <summary>
            Notes
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.Shortversion">
            <summary>
            Shortversion string
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.ShortversionAndVersion">
            <summary>
            Formateed string conatining shortversion and version
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.Timestamp">
            <summary>
            Timestamp of creation in unix format
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.TimeStamp">
            <summary>
            Timestamp of creation as DateTime
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.Title">
            <summary>
            Title of the app
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAppVersion.Version">
            <summary>
            Version string
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.IAuthStatus">
            <summary>
            interface for an authorization state
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.IAuthStatus.CheckIfStillValidAsync">
            <summary>
            trigger revalidation on the hockeyapp server
            </summary>
            <returns>true if this status (token) is still valid</returns>
        </member>
        <member name="P:Microsoft.HockeyApp.IAuthStatus.IsAuthorized">
            <summary>
            Indicates if this AuthCode was generated using the Authorize process (using email and password)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAuthStatus.IsIdentified">
            <summary>
            Indicates if this AuthCode was generated using the Identify process (using email and AppSecret)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAuthStatus.IsPermissionError">
            <summary>
            For invalid AuthStatus indicates that the user has not the required permission
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IAuthStatus.IsCredentialError">
            <summary>
            For invalid AuthStatus indicates that the credentials where wrong
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.ICrashData">
            <summary>
            interface for crashlog data
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.ICrashData.Contact">
            <summary>
            optional, string with contact information, limited to 255 chars
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.ICrashData.Description">
            <summary>
            optional, file with optional information, e.g. excerpts from the system log
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.ICrashData.Log">
            <summary>
            required, file with the crash log - Note: The maximum allowed file size is 200kB!
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.ICrashData.SDKName">
            <summary>
            Name of the used SDK
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.ICrashData.SDKVersion">
            <summary>
            Version of the used SDK
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.ICrashData.UserID">
            <summary>
            optional, string with a user or device ID, limited to 255 chars
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.ICrashData.Serialize(System.IO.Stream)">
            <summary>
            Serializes the crashdata to a stream.
            </summary>
            <param name="outputStream"></param>
        </member>
        <member name="M:Microsoft.HockeyApp.ICrashData.SendDataAsync">
            <summary>
            Post the crash to the HockeyApp-Platform
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.HockeyApp.IFeedbackAttachment">
            <summary>
            Interface for feedback attachments (documents, images)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackAttachment.Id">
            <summary>
            unique Id of the attachment
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackAttachment.CreatedAt">
            <summary>
            Timestamp of creation
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackAttachment.RemoteURL">
            <summary>
            Remote URL where this attachment is available
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackAttachment.FileName">
            <summary>
            Name of the file when it was uploaded
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackAttachment.DataBytes">
            <summary>
            Bytes (usually only used when uploading attachments)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackAttachment.ContentType">
            <summary>
            Mime content type
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.IFeedbackAttachment.LoadAttachmentFromServer">
            <summary>
            Load attachment to local storage
            </summary>
            <returns>true if successfull</returns>
        </member>
        <member name="T:Microsoft.HockeyApp.IFeedbackMessage">
            <summary>
            Represents a message in a feedback thread
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.AppId">
            <summary>
            App id of the app this feedback message belongs to
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.AppVersionId">
            <summary>
            App version where the feedback relates to
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.CleanText">
            <summary>
            Raw text of the message
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.Created">
            <summary>
            Timestamp of creation
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.CreatedAt">
            <summary>
            Timestamp of creation as string
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.Email">
            <summary>
            email of the message sender
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.GravatarHash">
            <summary>
            Gravatar hash of the senders email
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.Id">
            <summary>
            unique id of the message
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.Internal">
            <summary>
            Message is only internal
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.Model">
            <summary>
            Device model
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.Name">
            <summary>
            Name of sender
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.Oem">
            <summary>
             Device oem
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.OSVersion">
            <summary>
            corresponding OS Version
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.Subject">
            <summary>
            subject 
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.Text">
            <summary>
            text (can include html)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.Token">
            <summary>
            Token for message
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.UserString">
            <summary>
            User
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.Via">
            <summary>
            via-flag (indicates if from web/api ..)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.ViaAsString">
            <summary>
            via-flag as string
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackMessage.Attachments">
            <summary>
            message attachments
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.IFeedbackThread">
            <summary>
            interface for a hockeyapp feedback thread
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackThread.CreatedAt">
            <summary>
            time of creation as string
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackThread.EMail">
            <summary>
            email of thread starter
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackThread.Id">
            <summary>
            unique id
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackThread.IsNewThread">
            <summary>
            indicates if this thread was new (not on server yet)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackThread.Messages">
            <summary>
            the messages in this thread (newest message last)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackThread.Name">
            <summary>
            name of the thread
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackThread.Status">
            <summary>
            status
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IFeedbackThread.Token">
            <summary>
            unique token for this thread
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.IFeedbackThread.PostFeedbackMessageAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.HockeyApp.IFeedbackAttachment})">
            <summary>
            post a feedback message on this thread
            </summary>
            <param name="message">message text</param>
            <param name="email">[optional] email of sender</param>
            <param name="subject">[optional] message subject</param>
            <param name="name">[optional] name of sender</param>
            <param name="images">[optional] feedback attachments</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.HockeyApp.IHockeyClient">
            <summary>
            Public Interface for HockeyClient. Used by static extension methods in platform-specific SDKs
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackEvent(System.String)">
            <summary>
            Send a custom event for display in Events tab.
            </summary>
            <param name="eventName">Event name</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackEvent(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary>
            Send an event telemetry for display in Diagnostic Search and aggregation in Metrics Explorer.
            </summary>
            <param name="eventName">A name for the event.</param>
            <param name="properties">Named string values you can use to search and classify events.</param>
            <param name="metrics">Measurements associated with this event.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackEvent(Microsoft.HockeyApp.DataContracts.EventTelemetry)">
            <summary>
            Send an <see cref="T:Microsoft.HockeyApp.DataContracts.EventTelemetry"/> for display in Diagnostic Search and aggregation in Metrics Explorer.
            </summary>
            <param name="telemetry">An event log item.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackTrace(System.String)">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackTrace(System.String,Microsoft.HockeyApp.SeverityLevel)">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <param name="message">Message to display.</param>
            <param name="severityLevel">Trace severity level.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackTrace(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Mic
            Send a trace message for display in Diagnostic Search.
            </summary>
            <param name="message">Message to display.</param>
            <param name="properties">Named string values you can use to search and classify events.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackTrace(System.String,Microsoft.HockeyApp.SeverityLevel,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <param name="message">Message to display.</param>
            <param name="severityLevel">Trace severity level.</param>
            <param name="properties">Named string values you can use to search and classify events.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackTrace(Microsoft.HockeyApp.DataContracts.TraceTelemetry)">
            <summary>
            Send a trace message for display in Diagnostic Search.
            </summary>
            <param name="telemetry">Message with optional properties.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackMetric(System.String,System.Double,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Send metric telemetry for aggregation in Metric Explorer.
            </summary>
            <param name="name">Metric name.</param>
            <param name="value">Metric value.</param>
            <param name="properties">Named string values you can use to classify and filter metrics.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackMetric(Microsoft.HockeyApp.DataContracts.MetricTelemetry)">
            <summary>
            Send a <see cref="T:Microsoft.HockeyApp.DataContracts.MetricTelemetry"/> for aggregation in Metric Explorer.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackPageView(System.String)">
            <summary>
            Send information about the page viewed in the application.
            </summary>
            <param name="name">Name of the page.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackPageView(Microsoft.HockeyApp.DataContracts.PageViewTelemetry)">
            <summary>
            Send information about the page viewed in the application.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackException(System.Exception,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Send a exception for display in Diagnostic Search.
            </summary>
            <param name="ex">The exception to log.</param>
            <param name="properties">Named string values you can use to classify and search for this exception.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackDependency(System.String,System.String,System.DateTimeOffset,System.TimeSpan,System.Boolean)">
            <summary>
            Send information about external dependency call in the application.
            </summary>
            <param name="dependencyName">External dependency name.</param>
            <param name="commandName">Dependency call command name.</param>
            <param name="startTime">The time when the dependency was called.</param>
            <param name="duration">The time taken by the external dependency to handle the call.</param>
            <param name="success">True if the dependency call was handled successfully.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.TrackDependency(Microsoft.HockeyApp.DataContracts.DependencyTelemetry)">
            <summary>
            Send information about external dependency call in the application.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyClient.Flush">
            <summary>
            Clears all buffers for this telemetry stream and causes any buffered data to be written to the underlying channel.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Internal.IHockeyClientInternal">
            <summary>
            Full interface of Hockeyclient. Used by platform-specific SDKs
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.ApiBaseVersion2">
            <summary>
            Base-URI of Hockey Server API v2
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.ApiBaseVersion3">
            <summary>
            Base-URI of Hockey Server API v2
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.ApiDomain">
            <summary>
            domain of HockeyApp server
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.UserAgentString">
            <summary>
            User-agent string used in server communication
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.SdkName">
            <summary>
            Name of SDK
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.SdkVersion">
            <summary>
            SDK Version
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.AppIdentifier">
            <summary>
            Public identifier of you app
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.VersionInfo">
            <summary>
            Current version of your app
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.UserID">
            <summary>
            User Id to be sent with crash reports
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.ContactInformation">
            <summary>
            Contact information to be sent with crash reports
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.DescriptionLoader">
            <summary>
            DescriptionLoader Func which is called for unhandled exceptions. the returned string is added to the crashlog as description.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.TestAndSetIsConfigured">
            <summary>
            Atomically checks if Configure has been called and sets it to true.
            </summary>
            <returns>True if the method has been previously called, false otherwise</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.HandleInternalUnhandledException(System.Exception)">
            <summary>
            Handle Exceptions that are swallowed because we don't want our SDK crash other apps
            For internal use by platform SDKs
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.PlatformHelper">
            <summary>
            Platformhelper implemented by platform-specific SDKs
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Internal.IHockeyClientInternal.PrefilledCrashLogInfo">
            <summary>
            crsh log meta information prefilled with data from platform helper
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.CheckForInitialization">
            <summary>
            Check if this IHockeyClient has already been initialized. throws exception if not initialized.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.AuthorizeUserAsync(System.String,System.String)">
            <summary>
            Authenticate a user against hockeyapp.
            The returned IAuthStatus can be serialized and saved to later check if the token is still valid.
            </summary>
            <param name="email">email of the user</param>
            <param name="password">password of the user</param>
            <returns>an IAuthStatus containing the auid-token (if login is valid)</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.IdentifyUserAsync(System.String,System.String)">
            <summary>
            Identify a user against hockeyapp.
            The returned IAuthStatus can be serialized and saved to later check if the token is still valid.
            </summary>
            <param name="email">email of the user</param>
            <param name="appSecret">appSecret of your app</param>
            <returns>an IAuthStatus containing the auid-token (if login is valid)</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.CreateNewFeedbackThread">
            <summary>
            Creates a new Feedback-Thread. The thread is stored on the server with the posting of the first message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.OpenFeedbackThreadAsync(System.String)">
            <summary>
            Opens an existing Feedback-Thread on the server using the Thread-Token.
            </summary>
            <param name="threadToken">The Feedback-Thread or null, if the thread is not available or deleted on the server.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.GetAppVersionsAsync">
            <summary>
            Retrieves the current AppVersion from the HockeyApp-Server
            </summary>
            <returns>Metadata of the newest version of the app</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.CreateCrashData(System.Exception,Microsoft.HockeyApp.Model.CrashLogInformation)">
            <summary>
            Factory method for ICrashData
            </summary>
            <param name="ex">Exception for which crashData is created</param>
            <param name="crashLogInfo">Meta infos for crash</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.CreateCrashData(System.Exception)">
            <summary>
            Factory method for ICrashData
            </summary>
            <param name="ex">Exception for which crashData is created</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.CreateCrashData(System.String,System.String)">
            <summary>
            Factory method for ICrashData (for unity-sdk)
            </summary>
            <param name="logString">The log string.</param>
            <param name="stackTrace">The stack trace.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes an ICrashData from stream information
            </summary>
            <param name="inputStream"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.GetCrashFileNamesAsync">
            <summary>
            Returns filenames of current existing Crashlogs
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.DeleteAllCrashesAsync">
            <summary>
            Delete all existing Crash-logs
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.AnyCrashesAvailableAsync">
            <summary>
            Indicates if any crash-logs are available in storage
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.HandleExceptionAsync(System.Exception)">
            <summary>
            Handle Exception async
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.HandleException(System.Exception)">
            <summary>
            Handle Exception sync (only on platforms that support sync file access)
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Internal.IHockeyClientInternal.SendCrashesAndDeleteAfterwardsAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.HockeyApp.IHockeyPlatformHelper">
            <summary>
            interface for 
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyPlatformHelper.SetSettingValue(System.String,System.String)">
            <summary>
            Saves the given value under the specified key in app settings
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyPlatformHelper.GetSettingValue(System.String)">
            <summary>
            gets the value for the given key from app settings
            </summary>
            <param name="key"></param>
            <returns>the vlaue or null if the setting with the given key does not exist.</returns>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyPlatformHelper.RemoveSettingValue(System.String)">
            <summary>
            Removes the value for the given key from settings.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyPlatformHelper.WriteStreamToFileAsync(System.IO.Stream,System.String,System.String)">
            <summary>
            Writes the stream asynchronous to a file with the given filename and folder.
            </summary>
            <param name="dataStream">The data stream.</param>
            <param name="fileName">Name of the file.</param>
            <param name="folderName">Name of the folder.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.HockeyApp.IHockeyPlatformHelper.PlatformSupportsSyncWrite">
            <summary>
            Indicates whether the implementing platform supports synchronized write.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyPlatformHelper.WriteStreamToFileSync(System.IO.Stream,System.String,System.String)">
            <summary>
            Writes the stream synchronous to a file with the given filename and folder.
            </summary>
            <param name="dataStream">The data stream.</param>
            <param name="fileName">Name of the file.</param>
            <param name="folderName">Name of the folder.</param>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyPlatformHelper.GetFileNamesAsync(System.String,System.String)">
            <summary>
            Gets the file names of files in a directory asynchronous.
            </summary>
            <param name="folderName">Name of the folder.</param>
            <param name="fileNamePattern">The file name pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyPlatformHelper.GetStreamAsync(System.String,System.String)">
            <summary>
            Gets the stream of a file asynchronous.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="folderName">Name of the folder.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyPlatformHelper.DeleteFileAsync(System.String,System.String)">
            <summary>
            Deletes the file asynchronous.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="folderName">Name of the folder.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.IHockeyPlatformHelper.FileExistsAsync(System.String,System.String)">
            <summary>
            Returns if the file with the given name and folder exists asynchronous.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="folderName">Name of the folder.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.HockeyApp.IHockeyPlatformHelper.AppVersion">
            <summary>
            The version of your app - determined by platform-specific best practice
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IHockeyPlatformHelper.AppPackageName">
            <summary>
             PackageName of your app - the namespace oft the App class
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IHockeyPlatformHelper.OSVersion">
            <summary>
            Operating system version
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IHockeyPlatformHelper.OSPlatform">
            <summary>
            Operating system platform
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IHockeyPlatformHelper.ProductID">
            <summary>
            Product Id from Manifest
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IHockeyPlatformHelper.SDKVersion">
            <summary>
            Version of the HockeyApp SDK (which implements this PlatformHelper)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IHockeyPlatformHelper.SDKName">
            <summary>
            Name of the HockeyApp SDK (which implements this PlatformHelper)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IHockeyPlatformHelper.UserAgentString">
            <summary>
            UserAgent Header to be sent to HockeyApp
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IHockeyPlatformHelper.Manufacturer">
            <summary>
            Manufacturer of the device
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.IHockeyPlatformHelper.Model">
            <summary>
            Device model
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.InternalUnhandledExceptionEventArgs">
            <summary>
            EventArgs for exceptions which are swallowed by HockeyApp
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.InternalUnhandledExceptionEventArgs.Exception">
            <summary>
            The exception.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.ILog">
            <summary>
            Universal log interface
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.ILog.Info(System.String,System.Object[])">
            <summary>
            Logs an info message
            </summary>
            <param name="format">message to log</param>
            <param name="args">Parameters, which can be injected to the message</param>
        </member>
        <member name="M:Microsoft.HockeyApp.ILog.Warn(System.String,System.Object[])">
            <summary>
            Logs a warning message.
            </summary>
            <param name="format">message to log.</param>
            <param name="args">Parameters, which can be injected to the message</param>
        </member>
        <member name="M:Microsoft.HockeyApp.ILog.Error(System.Exception)">
            <summary>
            Logs an error message with an exception.
            </summary>
            <param name="exception">exception with has to be logged.</param>
        </member>
        <member name="T:Microsoft.HockeyApp.HockeyLogManager">
            <summary>
            Class for registering logging
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.HockeyLogManager.GetLog">
            <summary>
            Creates an <see cref="T:Microsoft.HockeyApp.ILog"/> for the provided type.
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Model.AppVersion">
            <summary>
            represents a version from an hockeyapp app
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.AppVersion.FromJson(System.IO.Stream)">
            <summary>
            unmarshal a AppVersion from a jsonStream
            </summary>
            <param name="jsonStream">json to unmarshall</param>
            <returns>populated AppVersion</returns>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.PublicIdentifier">
            <summary>
            unique public identifier of the app
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.Version">
            <summary>
            version string
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.Shortversion">
            <summary>
            short version string
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.Title">
            <summary>
            app title
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.Timestamp">
            <summary>
            app version timestamp
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.Appsize">
            <summary>
            size of version binary
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.Notes">
            <summary>
            app version notes
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.Mandatory">
            <summary>
            flag to indicate mandatory update
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.MinimumOsVersion">
            <summary>
            minimum os version for this app version
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.DeviceFamily">
            <summary>
            target device family
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.Id">
            <summary>
            version id
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.AppId">
            <summary>
            internal app id
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.TimeStamp">
            <summary>
            version timestamp as TimeStamp
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.AppSizeReadable">
            <summary>
            readable string of app size
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AppVersion.ShortversionAndVersion">
            <summary>
            combined string with version and shortversion
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Model.AuthStatus">
            <summary>
            represents the status of an autorization request
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AuthStatus.IsAuthorized">
            <summary>
            Indicates if this AuthCode was generated using the Authorize process (using email and password)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AuthStatus.IsIdentified">
            <summary>
            Indicates if this AuthCode was generated using the Identify process (using email and AppSecret)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AuthStatus.IsCredentialError">
            <summary>
            For invalid AuthStatus indicates that the credentials where wrong
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.AuthStatus.IsPermissionError">
            <summary>
            For invalid AuthStatus indicates that the user has not the required permission
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.AuthStatus.SerializeToString">
            <summary>
            Get a string represenation of this auth-status
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.AuthStatus.DeserializeFromString(System.String)">
            <summary>
            Marshall from a string representation (which you got by SerializeToString())
            </summary>
            <param name="aSerializedAuthStatus"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.AuthStatus.CheckIfStillValidAsync">
            <summary>
            trigger revalidation on the hockeyapp server
            </summary>
            <returns>true if this status (token) is still valid</returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Model.CrashData">
            <summary>
            represents data of a crashlog
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.CrashData.OnDeserializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            called on deserializing
            </summary>
            <param name="context">context of (de)serializer</param>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.CrashData.Log">
            <summary>
            log string
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.CrashData.Description">
            <summary>
            description string
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.CrashData.UserID">
            <summary>
            user id 
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.CrashData.Contact">
            <summary>
            contact info
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.CrashData.SDKName">
            <summary>
            sdk name
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.CrashData.SDKVersion">
            <summary>
            sdk version
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.CrashData.SendDataAsync">
            <summary>
            sends the crashlog data to the hockeyapp serer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.CrashData.Serialize(System.IO.Stream)">
            <summary>
            serialize data to a stream
            </summary>
            <param name="outputStream"></param>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.CrashData.Deserialize(System.IO.Stream)">
            <summary>
            unmarshall data from a stream
            </summary>
            <param name="inputStream">json data stream</param>
            <returns>populated CrashData</returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Model.CrashLogInformation">
            <summary>
            representing additional meta info to a crashlog
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Model.CrashLogInformation.PackageName">
            <summary>
            name of app package
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Model.CrashLogInformation.Version">
            <summary>
            version of app
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Model.CrashLogInformation.OperatingSystem">
            <summary>
            os
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Model.CrashLogInformation.Manufacturer">
            <summary>
            device manufacturer
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Model.CrashLogInformation.Model">
            <summary>
            device model
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Model.CrashLogInformation.ProductID">
            <summary>
            product id of app
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Model.CrashLogInformation.WindowsPhone">
            <summary>
            windows phone version
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Model.CrashLogInformation.Windows">
            <summary>
            windows version
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.CrashLogInformation.ToString">
            <summary>
            concatenate info to key-value string 
            </summary>
            <returns>data as string</returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Model.FeedbackAttachment">
            <summary>
            represents an attachment to a feedback message
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.FeedbackAttachment.#ctor(System.String,System.Byte[],System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="dataBytes"></param>
            <param name="contentType"></param>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackAttachment.RemoteURL">
            <summary>
            Remote URL where this attachment is available
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackAttachment.CreatedAt">
            <summary>
            Timestamp of creation
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackAttachment.Id">
            <summary>
            unique Id of the attachment
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackAttachment.FileName">
            <summary>
            Name of the file when it was uploaded
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackAttachment.DataBytes">
            <summary>
            Bytes (usually only used when uploading attachments)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackAttachment.ContentType">
            <summary>
            Mime content type
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.FeedbackAttachment.LoadAttachmentFromServer">
            <summary>
            Load attachment to local storage
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.HockeyApp.Model.FeedbackMessage">
            <summary>
            represents a feedback message
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Model.FeedbackMessage.ViaTypes">
            <summary>
            types of message sources
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Model.FeedbackMessage.ViaTypes.API">
            <summary>
            via rest api (normally by an app using the sdk)
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Model.FeedbackMessage.ViaTypes.Email">
            <summary>
            via email
            </summary>
        </member>
        <member name="F:Microsoft.HockeyApp.Model.FeedbackMessage.ViaTypes.Web">
            <summary>
            via web interface
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.Name">
            <summary>
            message attachments
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.Email">
            <summary>
            email of the message sender
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.GravatarHash">
            <summary>
            Gravatar hash of the senders email
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.Subject">
            <summary>
            subject
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.Text">
            <summary>
            text (can include html)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.Oem">
            <summary>
            Device oem
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.Model">
            <summary>
            Device model
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.OSVersion">
            <summary>
            corresponding OS Version
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.CreatedAt">
            <summary>
            Timestamp of creation as string
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.Attachments">
            <summary>
            message attachments
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.Created">
            <summary>
            Timestamp of creation
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.Id">
            <summary>
            unique id of the message
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.Token">
            <summary>
            Token for message
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.Via">
            <summary>
            via-flag (indicates if from web/api ..)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.UserString">
            <summary>
            User
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.Internal">
            <summary>
            Message is only internal
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.CleanText">
            <summary>
            Raw text of the message
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.AppId">
            <summary>
            App id of the app this feedback message belongs to
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.AppVersionId">
            <summary>
            App version where the feedback relates to
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackMessage.ViaAsString">
            <summary>
            via-flag as string
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Model.FeedbackResponseSingle">
            <summary>
            representation of a feedback response with a single message (returned after posting the message)
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.FeedbackResponseSingle.FromJson(System.IO.Stream)">
            <summary>
            unmarshal from json stream.
            </summary>
            <param name="jsonStream">The json stream.</param>
            <returns>populated object</returns>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackResponseSingle.Feedback">
            <summary>
            Gets the feedback thread.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackResponseSingle.FeedbackToken">
            <summary>
            Gets the feedback token.
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackResponseSingle.Status">
            <summary>
            Gets the status of the response (success)
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.Model.FeedbackThread">
            <summary>
            represents a feedback thread on hockeyapp with one or more messages
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.FeedbackThread.CreateInstance">
            <summary>
            Creates a new thread.
            </summary>
            <returns>new thread</returns>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackThread.IsNewThread">
            <summary>
            indicates if this thread was new (not on server yet)
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackThread.Name">
            <summary>
            name of the thread
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackThread.EMail">
            <summary>
            email of thread starter
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackThread.Id">
            <summary>
            unique id
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackThread.CreatedAt">
            <summary>
            time of creation as string
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackThread.Token">
            <summary>
            unique token for this thread
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackThread.Status">
            <summary>
            status
            </summary>
        </member>
        <member name="P:Microsoft.HockeyApp.Model.FeedbackThread.Messages">
            <summary>
            the messages in this thread (newest message last)
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.Model.FeedbackThread.PostFeedbackMessageAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.HockeyApp.IFeedbackAttachment})">
            <summary>
            Posts the feedback message asynchronous.
            </summary>
            <param name="message">The message.</param>
            <param name="email">The email.</param>
            <param name="subject">The subject.</param>
            <param name="name">The name.</param>
            <param name="attachments">The attachments.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Server error. Server returned status  + fbResp.Status</exception>
        </member>
        <member name="T:Microsoft.HockeyApp.Model.NamespaceDoc">
            <summary>
            Namespace for HockeyApp SDK models
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.WindowsAppInitializer">
            <summary>
            Windows app Initializer is TelemetryConfiguration and TelemetryModules 
            Bootstrap the WindowsApps SDK.
            </summary>
        </member>
        <member name="M:Microsoft.HockeyApp.WindowsAppInitializer.InitializeAsync(System.String,Microsoft.HockeyApp.TelemetryConfiguration)">
            <summary>
            Initializes default configuration and starts automatic telemetry collection for specified WindowsCollectors flags. Must specify InstrumentationKey as a parameter or in configuration file.
            <param name="instrumentationKey">Telemetry configuration.</param>
            <param name="configuration">Telemetry configuration.</param>
            </summary>
        </member>
        <member name="T:Microsoft.HockeyApp.NamespaceDoc">
            <summary>
            Main namespace for HockeyApp SDK for windows
            </summary>
        </member>
        <member name="F:AssemblyInfo.SystemRuntimeSerializationPublicKey">
            <summary>
            Public key postfix for InternalsVisibleToAttribute for System.Runtime.Serialization assembly.
            </summary>
        </member>
    </members>
</doc>
